<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: cdc9d28d334bbc08386fecf8aade66080004a9dd Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.sem-acquire" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sem_acquire</refname>
  <refpurpose>Adquire um semáforo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>sem_acquire</methodname>
   <methodparam><type>SysvSemaphore</type><parameter>semaphore</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>non_blocking</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>sem_acquire</function> bloqueia por padrão (se necessário) até que
   o semáforo possa ser adquirido. Um processo que tenta adquirir um semáforo que
   já adquiriu bloqueará para sempre se a aquisição do semáforo
   fizer com que seu número máximo de semáforos seja excedido.
  </para>
  <para>
   Após o processamento de uma solicitação, quaisquer semáforos adquiridos pelo processo, mas não
   explicitamente liberados, serão liberados automaticamente e um alerta será
   gerado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>semaphore</parameter></term>
     <listitem>
      <para>
       <parameter>semaphore</parameter> é um semáforo
       obtido de <function>sem_get</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>non_blocking</parameter></term>
     <listitem>
      <para>
       Especifica se o processo não deve aguardar a aquisição do semáforo.
       Se definido como &true;, a chamada retornará
       &false; imediatamente se um semáforo não puder ser adquirido
       imediatamente.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>semaphore</parameter> agora espera uma instância de <classname>SysvSemaphore</classname>;
        anteriormente, um <type>resource</type> era esperado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sem_get</function></member>
    <member><function>sem_release</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
