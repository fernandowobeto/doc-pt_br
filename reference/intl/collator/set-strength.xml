<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 679cf93fa1e54cde82fc9cf545966eb13bcb0638 Maintainer: leonardolara Status: ready -->
<refentry xml:id="collator.setstrength" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Collator::setStrength</refname>
  <refname>collator_set_strength</refname>
  <refpurpose>Define a for√ßa do agrupador</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   &style.oop;
  </para>
  <methodsynopsis role="Collator">
   <modifier>public</modifier> <type>true</type><methodname>Collator::setStrength</methodname>
   <methodparam><type>int</type><parameter>strength</parameter></methodparam>
  </methodsynopsis>
  <para>
   &style.procedural;
  </para>
  <methodsynopsis>
   <type>true</type><methodname>collator_set_strength</methodname>
   <methodparam><type>Collator</type><parameter>object</parameter></methodparam>
   <methodparam><type>int</type><parameter>strength</parameter></methodparam>
  </methodsynopsis>
  <para>
   O Servi√ßo de Agrupamento
   <link xlink:href="&url.icu.home;">ICU</link>
   suporta v√°rios n√≠veis de compara√ß√£o, tamb√©m chamados
   de "for√ßas" ("strengths"). Estas categorias permitem √† ICU ordenar
   strings com precis√£o conforme conven√ß√µes locais. Entretanto, ao permitir que
   os n√≠veis sejam seletivamente empregados, a pesquisa por uma string em um texto pode
   ser realizada com v√°rias condi√ß√µes de correspond√™ncia.
  </para>
  <para>
   <orderedlist>
    <listitem>
     <para>
      <emphasis>N√≠vel prim√°rio</emphasis>:
      Tipicamento usado para indicar diferen√ßas entre caracteres base
      (por exemplo "a" &lt; "b"). √â a diferen√ßa mais forte. Por
      exemplo, dicion√°rios s√£o divididos em se√ß√µes por caractere
      base. √â tamb√©m chamado de for√ßa n√≠vel 1 (<literal>level 1</literal>).
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>N√≠vel secund√°rio</emphasis>:
      Acentua√ß√µes nos caracteres s√£o consideradas diferen√ßas secund√°rias (por
      exemplo, "as" &lt; "√†s" &lt; "at"). Outras diferen√ßas entre letras podem
      tamb√©m ser consideradas secund√°rias, dependendo da l√≠ngua.
      Uma diferen√ßa secund√°ria √© ignorada quando existir uma diferen√ßa prim√°ria
      em qualquer lugar nas strings. Tamb√©m chamado de for√ßa n√≠vel 2 (<literal>level 2</literal>).
      <note>
       <para>
        Nota: Em algumas l√≠nguas (como o dinamarqu√™s), certas letras acentuadas s√£o
        consideradas como caracteres base separados. Na maioria da l√≠nguas, entretanto,
        uma letra com acentua√ß√£o tem apenas diferen√ßa secund√°ria em rela√ß√£o
        √† vers√£o n√£o acentuada dessa letra.
       </para>
      </note>
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>N√≠vel terci√°rio</emphasis>:
      Diferen√ßas de mai√∫sculas e min√∫sculas s√£o distinguidas no
      n√≠vel terci√°rio (por exemplo, "ao" &lt; "Ao" &lt; "a√≤"). Al√©m disso,
      uma variante de uma letra se diferencia da forma base no n√≠vel terci√°rio
      (como "a" e "ùí∂"). Outro exemplo √© a diferen√ßa entre o Kana grande e o
      pequeno. Uma diferen√ßa terci√°ria √© ignorada quando existir uma diferen√ßa prim√°ria
      ou secund√°ria em qualquer lugar nas strings. Tamb√©m chamado de for√ßa
      n√≠vel 3 (<literal>level 3</literal>).
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>N√≠vel quatern√°rio</emphasis>:
      Quando a pontua√ß√£o √© ignorada (consulte Ignorando Pontua√ß√µs) em n√≠veis 1-3,
      um n√≠vel adicional pode ser usado para distinguir palavras com e sem
      pontua√ß√£o (por exemplo, "ab" &lt; "a-b" &lt; "aB"). Esta diferen√ßa √©
      ignorada quando h√° uma diferen√ßa prim√°ria, secund√°ria ou terci√°ria. Tamb√©m
      conhecida como for√ßa n√≠vel 4 (<literal>level 4</literal>). O n√≠vel quatern√°rio deve
      ser usado apenas se for requerido ignorar a pontua√ß√£o ou ao processar texto
      em japon√™s (consulte processamento de Hiragana).
     </para>
    </listitem>
    <listitem>
     <para>
      <emphasis>N√≠vel id√™ntico</emphasis>:
      Quando todos os outros n√≠veis s√£o iguais, o n√≠vel id√™ntico √© usado como um
      desempate. Os valores de ponto de c√≥digo Unicode para a forma NFD de cada string
      s√£o comparados neste n√≠vel, apenas caso n√£o haja nenhuma diferen√ßa nos
      n√≠veis 1 a 4. Por exemplo, os sinais hebraicos de cantila√ß√£o somente s√£o distinguidos
      neste n√≠vel. Este n√≠vel deve ser usado com modera√ß√£o, j√° que diferen√ßas somente de valores
      de ponto de c√≥digo entre duas strings √© uma ocorr√™ncia extremamente rara.
      Usar este n√≠vel diminui consideravelmente o desempenho tanto para
      compara√ß√£o incremental quanto para gera√ß√£o de chave de ordena√ß√£o (e tamb√©m aumenta
      o comprimento da chave). Tamb√©m conhecido como for√ßa n√≠vel 5 (<literal>level 5</literal>).
     </para>
    </listitem>
   </orderedlist>
  </para>
  <para>
   Por exemplo, pode-se decidir por ignorar acentua√ß√£o ou ignorar tanto acentua√ß√£o quanto
   mai√∫sculas e min√∫sculas ao pesquisar por texto. Quase todos os caracteres s√£o diferenci√°veis
   pelos primeiros tr√™s n√≠veis e por isso, na maior parte das localidades, o valor padr√£o √© o terci√°rio.
   Entratanto, se a op√ß√£o ALTERNATE for definida para SHIFTED, a for√ßa quatern√°ria
   pode ser usada para desempatar entre espa√ßos em branco, pontua√ß√£o e s√≠mbolos que
   em outros casos seriam ignorados. Se uma distin√ß√£o muito fina entre caracteres for
   necess√°ria, o n√≠vel id√™ntico pode ser usado (por exemplo, o n√≠vel id√™ntico
   distingue entre a letra "a" min√∫scula matem√°tica em negrito e a
   letra "a" min√∫scula matem√°tica em it√°lico). Entretanto, usar n√≠veis mais altos que o terci√°rio
   resulta em chaves de ordena√ß√£o significativamente mais longas, e desempenho
   mais lento de compara√ß√£o para strings iguais.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>object</parameter></term>
     <listitem>
      <para>
       Objeto <classname>Collator</classname>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>strength</parameter></term>
     <listitem>
      <para>For√ßa a ser definida.</para>
      <para>
       Valores poss√≠veis s√£o:
       <itemizedlist>
        <listitem>
         <para>
          <constant>Collator::PRIMARY</constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>Collator::SECONDARY</constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>Collator::TERTIARY</constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>Collator::QUATERNARY</constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>Collator::IDENTICAL</constant>
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>Collator::DEFAULT_STRENGTH</constant>
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.true.always;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>collator_set_strength</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$arr  = array( 'a√≤', 'Ao', 'ao' );
$coll = collator_create( 'en_US' );

// Ordena o array usando a for√ßa padr√£o.
collator_sort( $coll, $arr );
var_export( $arr );

// Ordena o array usando a for√ßa prim√°ria.
collator_set_strength( $coll, Collator::PRIMARY );
collator_sort( $coll, $arr );
var_export( $arr );
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array (
  0 => 'ao',
  1 => 'Ao',
  2 => 'a√≤',
)
array (
  0 => 'a√≤',
  1 => 'Ao',
  2 => 'ao',
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="intl.collator-constants">Constantes de <classname>Collator</classname></link></member>
    <member><function>collator_get_strength</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"~/.phpdoc/manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
-->
