<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: leonardolara Status: ready -->

<reference xml:id="class.yaf-plugin-abstract" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>A classe Yaf_Plugin_Abstract</title>
 <titleabbrev>Yaf_Plugin_Abstract</titleabbrev>

 <partintro>

<!-- {{{ Yaf_Plugin_Abstract intro -->
  <section xml:id="yaf-plugin-abstract.intro">
   &reftitle.intro;
   <para>
    Os plugins permitem fácil extensibilidade e personalização da estrutura.
   </para>
   <para>
    Plugins são classes. A definição real da classe irá variar de acordo com o
    componente - pode ser necessário implementar esta interface, mas o fato
    é que o próprio plugin é uma classe.
   </para>
   <para>
    Um plugin pode ser carregado no Yaf usando
    <methodname>Yaf_Dispatcher::registerPlugin</methodname>. Após
    o registro, todos os métodos que o plugin implementou de acordo com esta
    interface serão chamados no momento apropriado.
   </para>
  </section>
<!-- }}} -->

 <section role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de plugin</title>
   <programlisting role="php">
<![CDATA[
<?php
   /* A classe Bootstrap deve ser definida em ./application/Bootstrap.php */
   class Bootstrap extends Yaf_Bootstrap_Abstract {
        public function _initPlugin(Yaf_Dispatcher $dispatcher) {
            /* registrar um plugin */
            $dispatcher->registerPlugin(new TestPlugin());
        }
   }

   /* a classe do plugin deve ser colocada em ./application/plugins/ */
   class TestPlugin extends Yaf_Plugin_Abstract {
        public function routerStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            /* Antes do roteamento.
               Neste gancho, o usuário pode reescrever o URL. */
            var_dump("routerStartup");
        }
        public function routerShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            /* Roteamento completo.
               Neste gancho, o usuário pode verificar o login. */
            var_dump("routerShutdown");
        }
        public function dispatchLoopStartup(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            var_dump("dispatchLoopStartup");
        }
        public function preDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            var_dump("preDispatch");
        }
        public function postDispatch(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            var_dump("postDispatch");
        }
        public function dispatchLoopShutdown(Yaf_Request_Abstract $request, Yaf_Response_Abstract $response) {
            /* Gancho final.
               Neste gancho o usuário pode fazer log ou implementar layout. */
            var_dump("dispatchLoopShutdown");
        }
   }

   Class IndexController extends Yaf_Controller_Abstract {
        public function indexAction() {
            return FALSE; // evita a renderização
        }
   }

   $config = array(
       "application" => array(
           "directory" => dirname(__FILE__) . "/application/",
       ),
   );

   $app = new Yaf_Application($config);
   $app->bootstrap()->run();
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
string(13) "routerStartup"
string(14) "routerShutdown"
string(19) "dispatchLoopStartup"
string(11) "preDispatch"
string(12) "postDispatch"
string(20) "dispatchLoopShutdown"
]]>
   </screen>
  </example>
 </section>


  <section xml:id="yaf-plugin-abstract.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>Yaf_Plugin_Abstract</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>Yaf_Plugin_Abstract</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.yaf-plugin-abstract')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[1])" />
   </classsynopsis>
<!-- }}} -->

  </section>

 </partintro>

 &reference.yaf.entities.yaf-plugin-abstract;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
