<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9e0804888ae46a50f28d98514a8d5e70a34e069c Maintainer: leonardolara Status: ready -->
<refentry xml:id="ffi.load" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>FFI::load</refname>
  <refpurpose>Carrega declarações C a partir de um arquivo de cabeçalho</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="FFI">
   <modifier>public</modifier> <modifier>static</modifier> <type class="union"><type>FFI</type><type>null</type></type><methodname>FFI::load</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   Carrega declarações C a partir de um arquivo de cabeçalho. É possível especificar bibliotecas compartilhadas que devem ser carregadas,
   usando definições especiais <literal>FFI_LIB</literal> no arquivo de cabeçalho carregado.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>filename</parameter></term>
    <listitem>
     <para>
      O nome de um arquivo de cabeçalho C.
     </para>
     <para>
      Diretivas de pré-processamento C não são suportadas, ou seja, <literal>#include</literal>,
      <literal>#define</literal> e macros CPP não funcionam, exceto para casos especiais
      listados abaixo.
     </para>
     <para>
      O arquivo de cabeçalho <emphasis>deveria</emphasis> conter uma declaração <literal>#define</literal> para a
      variável <literal>FFI_SCOPE</literal>, ex.: <code>#define FFI_SCOPE "MYLIB"</code>.
      Refira à <link linkend="ffi.intro">introdução desta classe</link> para detalhes.
     </para>
     <para>
      O arquivo de cabeçalho <emphasis>pode</emphasis> conter uma declaração <literal>#define</literal> para a
      variável <literal>FFI_LIB</literal> para especificar a biblioteca que a ser exposta. Se for
      uma biblioteca de sistema, apenas o nome é necessário, ex.: <code>#define FFI_LIB
      "libc.so.6"</code>. Se for uma biblioteca customizada, um caminho relativo é necessário,
      ex.: <code>#define FFI_LIB "./mylib.so"</code>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o objeto <classname>FFI</classname> recém criado ou &null; em caso de falha.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>FFI::scope</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
