<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 10beb4156579b621246bca461be7a0017bc280ad Maintainer: leonardolara Status: ready -->
<refentry xml:id="ffi.new" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>FFI::new</refname>
  <refpurpose>Cria uma estrutura de dados C</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="FFI">
   <modifier>public</modifier> <type class="union"><type>FFI\CData</type><type>null</type></type><methodname>FFI::new</methodname>
   <methodparam><type class="union"><type>FFI\CType</type><type>string</type></type><parameter>type</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>owned</parameter><initializer>&true;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>persistent</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cria uma estrutura de dados nativa do tipo C fornecido.
   Qualquer tipo declarado para a instância é permitido.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>type</parameter></term>
    <listitem>
     <para>
      <parameter>type</parameter> é uma declaração C válida como uma <type>string</type> ou uma
      instância de <classname>FFI\CType</classname> que já tenha sido criada.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>owned</parameter></term>
    <listitem>
     <para>
      Define se serão criados dados próprios (ou seja, gerenciados) ou não gerenciados. Os dados gerenciados residem junto
      com o objeto <classname>FFI\CData</classname> retornado e são liberados quando a
      última referência a esse objeto é liberada pela contagem regular de referências do PHP ou pelo GC.
      Dados não gerenciados devem ser liberados chamando <methodname>FFI::free</methodname>,
      quando não forem mais necessários.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>persistent</parameter></term>
    <listitem>
     <para>
      Define se a estrutura de dados C será alocada permanentemente na memória do sistema (usando
      <function>malloc</function>) ou na memória de requisição do PHP (usando <function>emalloc</function>).
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o objeto <classname>FFI\CData</classname> recém criado
   ou &null; em caso de falha.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        Chamar <methodname>FFI::new</methodname> estaticamente agora foi descontinuado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
