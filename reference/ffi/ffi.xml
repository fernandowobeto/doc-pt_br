<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: leonardolara Status: ready -->
<reference xml:id="class.ffi" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>Interface principal ao código e aos dados em C</title>
 <titleabbrev>FFI</titleabbrev>

 <partintro>

<!-- {{{ FFI intro -->
  <section xml:id="ffi.intro">
   &reftitle.intro;
   <para>
    Os objetos desta classe são criados pelos métodos de construção <methodname>FFI::cdef</methodname>,
    <methodname>FFI::load</methodname> ou <methodname>FFI::scope</methodname>. Variáveis ​​C definidas
    são disponibilizadas como propriedades da instância FFI e funções C definidas são disponibilizadas
    como métodos da instância FFI. Os tipos C declarados podem ser usados ​​para criar novas estruturas de dados C
    usando <methodname>FFI::new</methodname> e <methodname>FFI::type</methodname>.
   </para>
   <para>
    A análise da definição FFI e o carregamento da biblioteca compartilhada podem levar um tempo significativo. Não é útil
    fazer isso em cada solicitação HTTP em um ambiente Web. Entretanto, é possível pré-carregar definições e
    bibliotecas FFI na inicialização do PHP e instanciar objetos FFI quando necessário. Os arquivos de cabeçalho
    podem ser estendidos com definições especiais de <literal>FFI_SCOPE</literal> (por exemplo, <code>#define FFI_SCOPE "foo"</code>;
    o escopo padrão é "C") e então carregados por <methodname>FFI::load</methodname> durante o pré-carregamento.
    Isto leva à criação de uma ligação persistente, que estará disponível para todas as solicitações
    seguintes através de <methodname>FFI::scope</methodname>.
    Consulte o <link linkend="ffi.examples-complete">exemplo completo de PHP/FFI/pré-carregamento</link>
    para obter detalhes.
   </para>
   <para>
    É possível pré-carregar mais de um arquivo de cabeçalho C no mesmo escopo.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="ffi.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis class="class">
    <ooclass>
     <modifier>final</modifier>
     <classname>FFI</classname>
    </ooclass>

    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>public</modifier>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="ffi.constants.biggest-alignment">FFI::__BIGGEST_ALIGNMENT__</varname>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.ffi')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[@role='FFI'])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="class.ffi.constants">
   &reftitle.constants;
   <variablelist>
    <varlistentry xml:id="ffi.constants.biggest-alignment">
     <term><constant>FFI::__BIGGEST_ALIGNMENT__</constant></term>
     <listitem>
      <para/>
     </listitem>
    </varlistentry>
   </variablelist>
  </section>
 </partintro>

 &reference.ffi.entities.ffi;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
