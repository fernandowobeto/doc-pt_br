<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c0b61c45a5dabe46865510311e57b77ea3dddb7 Maintainer: leonardolara Status: ready -->
<refentry xml:id="gearmanworker.work" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanWorker::work</refname>
  <refpurpose>Espera e executa trabalhos</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="GearmanWorker">
   <modifier>public</modifier> <type>bool</type><methodname>GearmanWorker::work</methodname>
   <void/>
  </methodsynopsis>
  <para>
   Aguarda que um trabalho seja atribuído e então chama a função de retorno de chamada apropriada.
   Emite um <constant>E_WARNING</constant> com o último erro Gearman se o código de retorno
   não for um de <constant>GEARMAN_SUCCESS</constant>, <constant>GEARMAN_IO_WAIT</constant>,
   ou <constant>GEARMAN_WORK_FAIL</constant>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <methodname>GearmanWorker::work</methodname></title>
    <programlisting role="php">
<![CDATA[
<?php

# cria o trabalhador
$worker = new GearmanWorker();

# adiciona o servidor de trabalho padrão (localhost)
$worker->addServer();

# adiciona a função reversa
$worker->addFunction("reverse", "my_reverse_function");

# inicia o trabalhador ouvindo as submissões de trabalho
while ($worker->work());

function my_reverse_function($job)
{
  return strrev($job->workload());
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanWorker::addFunction</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
