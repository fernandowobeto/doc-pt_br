<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 3c0b61c45a5dabe46865510311e57b77ea3dddb7 Maintainer: leonardolara Status: ready -->
<refentry xml:id="gearmanworker.addfunction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>GearmanWorker::addFunction</refname>
  <refpurpose>Registra e adiciona função de retorno</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="GearmanWorker">
   <modifier>public</modifier> <type>bool</type><methodname>GearmanWorker::addFunction</methodname>
   <methodparam><type>string</type><parameter>function_name</parameter></methodparam>
   <methodparam><type>callable</type><parameter>function</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>context</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Registra um nome de função com o servidor de trabalho e especifica um retorno de chamada correspondente a essa
   função. Opcionalmente, especifica dados de contexto de aplicação extras a serem usados ​​quando o retorno de chamada for
   chamado e um tempo limite.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>function_name</parameter></term>
     <listitem>
      <para>
       O nome de uma função para registrar no servidor de trabalho
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>function</parameter></term>
     <listitem>
      <para>
       Uma função que é chamada quando um trabalho para o nome da função registrada é enviado
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Uma referência a dados de contexto de aplicação arbitrários que podem ser modificados pela função do trabalhador
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Um intervalo de tempo em segundos
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Trabalhador simples fazendo uso de dados extras de contexto da aplicação</title>
    <programlisting role="php">
<![CDATA[
<?php

# obtém um trabalhador Gearman
$worker= new GearmanWorker();

# adiciona o servidor padrão (localhost)
$worker->addServer();

# define uma variável para armazenar dados da aplicação
$count= 0;

# adiciona a função "reverse"
$worker->addFunction("reverse", "reverse_cb", $count);

# inicia o trabalhador
while ($worker->work());

function reverse_cb($job, &$count)
{
  $count++;
  return "$count: " . strrev($job->workload());
}

?>
]]>
    </programlisting>
    <para>
     Executar um cliente que envia dois trabalhos para a função reversa teria
     saída semelhante à seguinte:
    </para>
    <screen>
<![CDATA[
1: olleh
2: dlrow
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>GearmanClient::do</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
