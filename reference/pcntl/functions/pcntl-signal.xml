<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 5fe0f8494374d594762e56b2d769c2828b1e0ddb Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.pcntl-signal" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>pcntl_signal</refname>
  <refpurpose>Instala um manipulador de sinal</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pcntl_signal</methodname>
   <methodparam><type>int</type><parameter>signal</parameter></methodparam>
   <methodparam><type class="union"><type>callable</type><type>int</type></type><parameter>handler</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>restart_syscalls</parameter><initializer>&true;</initializer></methodparam>
  </methodsynopsis>
  <para>
   A função <function>pcntl_signal</function> instala um novo
   manipulador de sinal ou substitui o manipulador de sinal atual pelo sinal indicado por <parameter>signal</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>signal</parameter></term>
     <listitem>
      <para>
       O número do sinal.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>handler</parameter></term>
     <listitem>
      <para>
       O manipulador de sinal. Pode ser um <type>callable</type>, que
       será invocado para manipular o sinal, ou qualquer uma das duas constantes
       globais <constant>SIG_IGN</constant> ou <constant>SIG_DFL</constant>,
       que ignorarão o sinal ou restaurarão o manipulador de sinal padrão,
       respectivamente.
      </para>
      <para>
       Se um <type>callable</type> for fornecido, ele deve implementar a seguinte
       assinatura:
      </para>
      <para>
       <methodsynopsis>
        <type>void</type><methodname><replaceable>handler</replaceable></methodname>
        <methodparam><type>int</type><parameter>signo</parameter></methodparam>
        <methodparam><type>mixed</type><parameter>siginfo</parameter></methodparam>
       </methodsynopsis>
       <variablelist>
        <varlistentry>
         <term><parameter>signal</parameter></term>
         <listitem>
          <simpara>
           O sinal que está sendo manipulado.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term><parameter>siginfo</parameter></term>
         <listitem>
          <simpara>
           Se os sistemas operacionais suportarem estruturas siginfo_t, este parâmetro será um array de informações de sinal dependentes do sinal.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
      <note>
       <para>
        Observe que, quando é definido um manipulador para um método de objeto, a contagem de referências desse objeto
        é aumentada, o que o faz persistir até que seja
        alterado o manipulador para outra coisa ou o script termine.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>restart_syscalls</parameter></term>
     <listitem>
      <para>
       Especifica se a reinicialização da chamada do sistema deve ser usada quando este
       sinal chegar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.1.0</entry>
       <entry>
        A partir do PHP 7.1.0, a função de retorno do manipulador recebe um segundo argumento
        contendo o a informação do sinal específico. Este dado é
        fornecido somente se o sistema operacional tiver a estrutura siginfo_t.
        Se o sistema operacional não implementar siginfo_t, NULL será fornecido.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>pcntl_signal</function></title>
    <programlisting role="php">
<![CDATA[
<?php
pcntl_async_signals(true);

// função de manipulação de sinal
function sig_handler($signo)
{

     switch ($signo) {
         case SIGTERM:
             // manipula tarefas de desligamento
             exit;
             break;
         case SIGHUP:
             // manipula tarefas de reinicialização
             break;
         case SIGUSR1:
             echo "Capturado SIGUSR1...\n";
             break;
         default:
             // manipula todas as outras tarefas
     }

}

echo "Installing signal handler...\n";

// configure manipuladores de sinal
pcntl_signal(SIGTERM, "sig_handler");
pcntl_signal(SIGHUP,  "sig_handler");
pcntl_signal(SIGUSR1, "sig_handler");

// ou use um objeto
// pcntl_signal(SIGUSR1, array($obj, "do_something"));

echo "Gerando sinal SIGUSR1 para si mesmo...\n";

// envia SIGUSR1 ao ID de processo atual
// funções posix_* requerem a extensão posix
posix_kill(posix_getpid(), SIGUSR1);

echo "Feito\n";

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes"><!-- {{{ -->
  &reftitle.notes;
  <para>
   <function>pcntl_signal</function> não empilha os manipuladores de sinal, mas os substitui.
  </para>
  <refsect2>
   <title>Métodos de Despacho</title>
   <para>
    Existem vários métodos de despacho de manipuladores de sinais:
    <simplelist>
     <member>Despacho assíncrono com <function>pcntl_async_signals</function> habilitado. Este é o método recomendado.</member>
     <member>Configurando a frequência de <link linkend="control-structures.declare.ticks">tiques</link></member>
     <member>Despacho manual com <function>pcntl_signal_dispatch</function></member>
    </simplelist>
   </para>
   <para>
    Quando os sinais são despachados de forma assíncrona ou usando execução baseada em tiques, funções de bloqueio como
    <function>sleep</function> podem ser interrompidas.
   </para>
  </refsect2>
 </refsect1><!-- }}} -->

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link xlink:href="https://en.wikipedia.org/wiki/Signal_(IPC)">Signal (IPC)</link> na Wikipedia</member>
    <member><function>pcntl_async_signals</function></member>
    <member><function>pcntl_fork</function></member>
    <member><function>pcntl_signal_dispatch</function></member>
    <member><function>pcntl_waitpid</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
