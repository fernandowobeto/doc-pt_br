<?xml version="1.0" encoding="utf-8"?><!-- EN-Revision: 61374bbe228e8e9c55a24aba59a1e2bb2a871148 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.pcntl-rfork" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pcntl_rfork</refname>
  <refpurpose>Manipula recursos do processo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>pcntl_rfork</methodname>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>signal</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Manipula recursos do processo.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       O parâmetro <parameter>flags</parameter> determina quais recursos do processo de chamada (pai)
       são compartilhados pelo novo processo (filho) ou inicializados com seus valores padrão.
      </para>
      <para>
       <parameter>flags</parameter> é o OR lógico de algum subconjunto de:
       <simplelist>
        <member>
         <constant>RFPROC</constant>: Se definido, um novo processo é criado;
         caso contrário, as alterações afetam o processo atual.
        </member>
        <member>
         <constant>RFNOWAIT</constant>: Se definido, o processo filho será dissociado do processo pai.
         Ao sair, o processo filho não deixará um status para o processo pai coletar.
        </member>
        <member>
         <constant>RFFDG</constant>: Se definido, a tabela de descritores de arquivo do invocador é copiada;
         caso contrário, os dois processos compartilham uma única tabela.
        </member>
        <member>
         <constant>RFCFDG</constant>: Se definido, o novo processo inicia com uma tabela de descritores de arquivo limpa.
         É mutuamente exclusiva com <constant>RFFDG</constant>.
        </member>
        <member>
         <constant>RFLINUXTHPN</constant>: Se definido, o kernel retornará SIGUSR1 em vez de SIGCHILD ao sair da thread filha.
         Isso serve para fazer notificação ao processo pai da saída do clone no Linux.
        </member>
       </simplelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>signal</parameter></term>
     <listitem>
      <para>
       O número do sinal.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Em caso de sucesso, o PID do processo filho é retornado na
   thread de execução do processo pai, e um <literal>0</literal> é retornado na thread
   de execução do processo filho.
   Em caso de falha, <literal>-1</literal> será retornado no
   contexto do processo pai, nenhum processo filho será criado e um erro de PHP será gerado.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>pcntl_rfork</function></title>
    <programlisting role="php">
<![CDATA[
<?php

$pid = pcntl_rfork(RFNOWAIT|RFTSIGZMB, SIGUSR1);
if ($pid > 0) {
  // Este é o processo pai.
  var_dump($pid);
} else {
  // Este é o processo filho.
  var_dump($pid);
  sleep(2); // como o filho não espera, então vemos seu "pid"
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
int(77093)
int(0)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Esta função só está disponível em sistemas BSD.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pcntl_fork</function></member>
    <member><function>pcntl_waitpid</function></member>
    <member><function>pcntl_signal</function></member>
    <member><function>cli_set_process_title</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
