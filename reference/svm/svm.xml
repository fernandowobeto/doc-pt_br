<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 4d17b7b4947e7819ff5036715dd706be87ae4def Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<reference xml:id="class.svm" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>A classe SVM</title>
 <titleabbrev>SVM</titleabbrev>

 <partintro>

<!-- {{{ svm intro -->
  <section xml:id="svm.intro">
   &reftitle.intro;
   <para>

   </para>
  </section>
<!-- }}} -->

  <section xml:id="svm.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>SVM</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <ooclass>
      <classname>SVM</classname>
     </ooclass>
    </classsynopsisinfo>
<!-- }}} -->
    <classsynopsisinfo role="comment">&Constants;</classsynopsisinfo>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.c-svc">SVM::C_SVC</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.nu-svc">SVM::NU_SVC</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.one-class">SVM::ONE_CLASS</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.epsilon-svr">SVM::EPSILON_SVR</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.nu-svr">SVM::NU_SVR</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.kernel-linear">SVM::KERNEL_LINEAR</varname>
     <initializer>0</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.kernel-poly">SVM::KERNEL_POLY</varname>
     <initializer>1</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.kernel-rbf">SVM::KERNEL_RBF</varname>
     <initializer>2</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.kernel-sigmoid">SVM::KERNEL_SIGMOID</varname>
     <initializer>3</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.kernel-precomputed">SVM::KERNEL_PRECOMPUTED</varname>
     <initializer>4</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-type">SVM::OPT_TYPE</varname>
     <initializer>101</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-kernel-type">SVM::OPT_KERNEL_TYPE</varname>
     <initializer>102</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-degree">SVM::OPT_DEGREE</varname>
     <initializer>103</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-shrinking">SVM::OPT_SHRINKING</varname>
     <initializer>104</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-probability">SVM::OPT_PROPABILITY</varname>
     <initializer>105</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-gamma">SVM::OPT_GAMMA</varname>
     <initializer>201</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-nu">SVM::OPT_NU</varname>
     <initializer>202</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-eps">SVM::OPT_EPS</varname>
     <initializer>203</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-p">SVM::OPT_P</varname>
     <initializer>204</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-coef-zero">SVM::OPT_COEF_ZERO</varname>
     <initializer>205</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-c">SVM::OPT_C</varname>
     <initializer>206</initializer>
    </fieldsynopsis>
    <fieldsynopsis>
     <modifier>const</modifier>
     <type>int</type>
     <varname linkend="svm.constants.opt-cache-size">SVM::OPT_CACHE_SIZE</varname>
     <initializer>207</initializer>
    </fieldsynopsis>

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.svm')/db:refentry/db:refsect1[@role='description']/descendant::db:constructorsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.svm')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])">
     <xi:fallback/>
    </xi:include>
   </classsynopsis>
<!-- }}} -->

  </section>

<!-- {{{ svm constants -->
  <section xml:id="svm.constants">
   &reftitle.constants;
   <section xml:id="svm.constants.types">
    <title>Constantes SVM</title>
    <variablelist>

     <varlistentry xml:id="svm.constants.c-svc">
      <term><constant>SVM::C_SVC</constant></term>
      <listitem>
       <para>O tipo básico de SVM C_SVC. O padrão e um bom ponto de partida.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.nu-svc">
      <term><constant>SVM::NU_SVC</constant></term>
      <listitem>
       <para>O tipo NU_SVC usa uma ponderação de erro diferente e mais flexível.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.one-class">
      <term><constant>SVM::ONE_CLASS</constant></term>
      <listitem>
       <para>Tipo SVM de uma só classe. Treina apenas em uma única classe, usando valores discrepantes como exemplos negativos.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.epsilon-svr">
      <term><constant>SVM::EPSILON_SVR</constant></term>
      <listitem>
       <para>Um tipo de SVM para regressão (prevendo um valor em vez de apenas uma classe).</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.nu-svr">
      <term><constant>SVM::NU_SVR</constant></term>
      <listitem>
       <para>Um tipo de regressão SVM estilo NU</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.kernel-linear">
      <term><constant>SVM::KERNEL_LINEAR</constant></term>
      <listitem>
       <para>Um kernel muito simples, pode funcionar bem em problemas de classificação de documentos grandes</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.kernel-poly">
      <term><constant>SVM::KERNEL_POLY</constant></term>
      <listitem>
       <para>Um kernel polinomial</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.kernel-rbf">
      <term><constant>SVM::KERNEL_RBF</constant></term>
      <listitem>
       <para>O kernel RBD gaussiano comum. Lida bem com problemas não lineares e é um bom padrão para classificação.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.kernel-sigmoid">
      <term><constant>SVM::KERNEL_SIGMOID</constant></term>
      <listitem>
       <para>Um kernel baseado na função sigmóide. Utilizando isso, a SVM se torna muito semelhante a uma rede neural sigmóide de duas camadas.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.kernel-precomputed">
      <term><constant>SVM::KERNEL_PRECOMPUTED</constant></term>
      <listitem>
       <para>Um kernel pré-computado - atualmente sem suporte.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-type">
      <term><constant>SVM::OPT_TYPE</constant></term>
      <listitem>
       <para>A chave de opções para o tipo SVM.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-kernel-type">
      <term><constant>SVM::OPT_KERNEL_TYPE</constant></term>
      <listitem>
       <para>A chave de opções para o tipo de kernel.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-degree">
      <term><constant>SVM::OPT_DEGREE</constant></term>
      <listitem>
       <para></para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-shrinking">
      <term><constant>SVM::OPT_SHRINKING</constant></term>
      <listitem>
       <para>Parâmetro de treinamento, booleano, para determinar se deve ou não ser usada a heurística de encolhimento.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-probability">
      <term><constant>SVM::OPT_PROBABILITY</constant></term>
      <listitem>
       <para>Parâmetro de treinamento, booleano, para coletar e usar estimativas de probabilidade.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-gamma">
      <term><constant>SVM::OPT_GAMMA</constant></term>
      <listitem>
       <para>Parâmetro de algoritmo para tipos de kernel Poly, RBF e sigmóide.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-nu">
      <term><constant>SVM::OPT_NU</constant></term>
      <listitem>
       <para>A chave de opção para o parâmetro nu, usada apenas nos tipos NU_SVM.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-eps">
      <term><constant>SVM::OPT_EPS</constant></term>
      <listitem>
       <para>A chave de opção para o parâmetro epsilon, usada na regressão Epsilon.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-p">
      <term><constant>SVM::OPT_P</constant></term>
      <listitem>
       <para>Parâmetro de treinamento usado pela regressão Epsilon SVR.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-coef-zero">
      <term><constant>SVM::OPT_COEF_ZERO</constant></term>
      <listitem>
       <para>Parâmetro de algoritmo para kernels Poly e sigmóides</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-c">
      <term><constant>SVM::OPT_C</constant></term>
      <listitem>
       <para>A opção pelo parâmetro de custo que controla a ponderação entre erros e generalidade - efetivamente a penalidade pela classificação incorreta de exemplos de treinamento.</para>
      </listitem>
     </varlistentry>

     <varlistentry xml:id="svm.constants.opt-cache-size">
      <term><constant>SVM::OPT_CACHE_SIZE</constant></term>
      <listitem>
       <para>Tamanho da memória de cache, em MB</para>
      </listitem>
     </varlistentry>
    </variablelist>
   </section>
  </section>
<!-- }}} -->


 </partintro>

 &reference.svm.entities.svm;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
