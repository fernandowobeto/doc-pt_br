<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 66aff414be91c5a0446be585aa6ac78121de1e67 Maintainer: leonardolara Status: ready --><!-- CREDITS: rogeriopradoj,ae,leonardolara -->

<appendix xml:id="password.constants" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 &reftitle.constants;
 &extension.constants.core;

 <para>
  <variablelist>
   <varlistentry xml:id="constant.password-bcrypt">
    <term>
     <constant>PASSWORD_BCRYPT</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <para>
      <constant>PASSWORD_BCRYPT</constant> é usada para criar novas hashes
      de senha usando o algoritmo <constant>CRYPT_BLOWFISH</constant>.
     </para>
     <para>
      Sempre terminará com um hash usando o formato de criptografia "$2y$",
      com 60 caracteres.
     </para>
     <para>
      Opções suportadas:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <literal>salt</literal> (<type>string</type>) - para fornecer manualmente um salt que será usado ao fazer o hash da senha.
        Observe que isso irá substituir e evitar que um salt seja gerado automaticamente.
       </para>
       <para>
        Se omitido, um salt aleatório será gerado pela função <function>password_hash</function> para
        cada senha sofrendo hash. Esse é o modo de operação desejado
        e a partir do PHP 7.0.0 a opção salt foi descontinuada.
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>cost</literal> (<type>int</type>) - indica o custo de algoritmo que deve ser usado.
        Exemplos desses valores podem ser encontrados na página da função <function>crypt</function>.
        <!---->
       </para>
       <para>
        Se omitido, um valor padrão de <literal>12</literal> será usado. Esta é uma boa
        base de custo, mas pode-se considerar aumentar esse valor dependendo do equipamento.
       </para>
      </listitem>
     </itemizedlist>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-bcrypt-default-cost">
    <term>
     <constant>PASSWORD_BCRYPT_DEFAULT_COST</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
     </para>
     <para>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2i">
    <term>
     <constant>PASSWORD_ARGON2I</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <para>
      <constant>PASSWORD_ARGON2I</constant> é utilizado para criar novos hashes
      utilizando o algoritmo Argon2i.
     </para>
     <para>
      Opções:
     </para>
     <itemizedlist>
      <listitem>
       <para>
        <literal>memory_cost</literal> (<type>int</type>) - Memória máxima (em bytes) que poderá
        ser utilizada para calcular o hash Argon2. Padrão: <constant>PASSWORD_ARGON2_DEFAULT_MEMORY_COST</constant>.
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>time_cost</literal> (<type>int</type>) - Tempo máximo que poderá
        demorar para calcula o hash Argon2. Padrão: <constant>PASSWORD_ARGON2_DEFAULT_TIME_COST</constant>.
       </para>
      </listitem>
      <listitem>
       <para>
        <literal>threads</literal> (<type>int</type>) - Número de threads utilizada para calcular
        o hash Argon2. Padrão: <constant>PASSWORD_ARGON2_DEFAULT_THREADS</constant>.
        Somente disponível com libargon2, mas não na implementação libsodium.
       </para>
      </listitem>
     </itemizedlist>
     <para>
      Disponível a partir do PHP 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2id">
    <term>
     <constant>PASSWORD_ARGON2ID</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <para>
      <constant>PASSWORD_ARGON2ID</constant> é utilizado para criar novos hashes de
      senha com o algoritmo Argon2id. Ele suporta as mesmas opções de
      <link linkend="constant.password-argon2i"><constant>PASSWORD_ARGON2I</constant></link>.
     </para>
     <para>
      Disponível a partir do PHP 7.3.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2-default-memory-cost">
    <term>
     <constant>PASSWORD_ARGON2_DEFAULT_MEMORY_COST</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Quantidade de memória padrão, em bytes, que será utilizado ao tentar
      calcular um hash.
     </para>
     <para>
      Disponível a partir do PHP 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2-default-time-cost">
    <term>
     <constant>PASSWORD_ARGON2_DEFAULT_TIME_COST</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Quantidade de tempo padrão que será gasto tentando calcular um hash.
     </para>
     <para>
      Disponível a partir do PHP 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2-default-threads">
    <term>
     <constant>PASSWORD_ARGON2_DEFAULT_THREADS</constant>
     (<type>int</type>)
    </term>
    <listitem>
     <para>
      Número de threads padrão qual a Argon2lib irá utilizar.
      Não disponível na implementação libsodium.
     </para>
     <para>
      Disponível a partir do PHP 7.2.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-argon2-provider">
    <term>
     <constant>PASSWORD_ARGON2_PROVIDER</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <para>
     </para>
     <para>
      Disponível a partir do PHP 7.4.0.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="constant.password-default">
    <term>
     <constant>PASSWORD_DEFAULT</constant>
     (<type>string</type>)
    </term>
    <listitem>
     <para>
      O algoritmo padrão a ser usado para fazer o hash se nenhum algoritmo for fornecido.
      Ele pode mudar com as novas versões do PHP quando algoritmos de hash novos e mais
      fortes forem suportados.
     </para>
     <para>
      É importante notar que ao longo do tempo essa constante pode mudar.
      Assim sendo, deve-se estar ciente que o comprimento do hash resultante
      pode mudar.
      Portanto, ao usar <constant>PASSWORD_DEFAULT</constant>, o hash
      resultante deve ser armazanado de uma forma que possa armazenar hashes arbitrários,
      o comprimento recomendado é de <literal>255</literal> bytes.
     </para>
     <simpara>
      Atualmente é um sinônimo de <constant>PASSWORD_BCRYPT</constant>.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>

 <formalpara>
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.4.0</entry>
       <entry>
        Os valores informados como IDs de algoritimo (<constant>PASSWORD_BCRYPT</constant>, <constant>PASSWORD_ARGON2I</constant>,
        <constant>PASSWORD_ARGON2ID</constant> e <constant>PASSWORD_DEFAULT</constant>) agora são do tipo &string;.
        Anteriormente eles eram do tipo &integer;.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </formalpara>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

