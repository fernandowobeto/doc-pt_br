<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 715a125af5a86f0e6d6d5aa6cfa9c45257a433ac Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.svn-status" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>svn_status</refname>
  <refpurpose>Retorna o status dos arquivos e diretórios da cópia de trabalho</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>svn_status</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Retorna o status dos arquivos e diretórios da cópia de trabalho, fornecendo modificações,
   adições, exclusões e outras alterações nos itens da cópia de trabalho.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>path</parameter></term>
     <listitem>
      <para>
       Caminho local para o arquivo ou diretório para recuperar o status.
      </para>
      &svn.relativepath;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Qualquer combinação de <constant>Svn::NON_RECURSIVE</constant>,
       <constant>Svn::ALL</constant> (independentemente do status da modificação),
       <constant>Svn::SHOW_UPDATES</constant> (entradas serão adicionadas para itens
       desatualizados), <constant>Svn::NO_IGNORE</constant> (desconsidera as propriedades
       <literal>svn:ignore</literal> ao procurar por novos arquivos)
       e <constant>Svn::IGNORE_EXTERNALS</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um array indexado numericamente de arrays associativos detalhando
   o status dos itens no repositório:
  </para>
  <screen>
<![CDATA[
Array (
    [0] => Array (
        // informação sobre o item
    )
    [1] => ...
)
]]>
  </screen>
  <para>
   As informações sobre o item são um array associativo que pode conter
   as seguintes chaves:
  </para>
  <variablelist>
   <varlistentry>
    <term><varname>path</varname></term>
     <listitem>
      <simpara>
       String com o caminho para o arquivo/diretório desta entrada no sistema de arquivos local.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>text_status</varname></term>
     <listitem>
      <simpara>
       Status do texto do item. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos_text_status</varname></term>
     <listitem>
      <simpara>
       Status do texto do item no repositório. Tem precisão somente se
       <parameter>update</parameter> estiver definido como &true;.
       &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>prop_status</varname></term>
     <listitem>
      <simpara>
       Status das propriedades do item. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos_prop_status</varname></term>
     <listitem>
      <simpara>
       Status da propriedade do item no repositório. Tem precisão somente se
       <parameter>update</parameter> estiver definido como &true;. &svn.referto.status;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>locked</varname></term>
     <listitem>
      <simpara>
       Se o item está bloqueado ou não. (Definido somente se &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>copied</varname></term>
     <listitem>
      <simpara>
       Se o item foi copiado ou não (agendado para adição com
       histórico). (Definido somente se &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>switched</varname></term>
     <listitem>
      <simpara>
       Se o item foi alternado ou não usando o comando switch.
       (Definido somente se &true;)
      </simpara>
     </listitem>
   </varlistentry>
  </variablelist>
  <para>
   Essas chaves só serão definidas se o item for versionado:
  </para>
  <variablelist>
   <varlistentry>
    <term><varname>name</varname></term>
     <listitem>
      <simpara>
       Nome base do item no repositório.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>url</varname></term>
     <listitem>
      <simpara>
       URL do item no repositório.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>repos</varname></term>
     <listitem>
      <simpara>
       URL base do repositório.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>revision</varname></term>
     <listitem>
      <simpara>
       Número inteiro com revisão do item na cópia de trabalho.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>kind</varname></term>
     <listitem>
      <simpara>
       Tipo de item, ou seja, arquivo ou diretório. &svn.referto.type;
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>schedule</varname></term>
     <listitem>
      <simpara>
       Ação agendada para o item, ou seja, adição ou exclusão. Constantes
       para esses números mágicos não estão disponíveis, elas podem
       ser emuladas usando:
      </simpara>
       <programlisting role="php">
<![CDATA[
<?php
if (!defined('svn_wc_schedule_normal')) {
    define('svn_wc_schedule_normal',  0); // nada de especial
    define('svn_wc_schedule_add',     1); // item será adicionado
    define('svn_wc_schedule_delete',  2); // item será excluído
    define('svn_wc_schedule_replace', 3); // item será adicionado e excluído
}
?>
]]>
      </programlisting>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>deleted</varname></term>
     <listitem>
      <simpara>
       Se o item foi excluído ou não, mas a revisão dos pais está
       atrasada. (Definido somente se &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>absent</varname></term>
     <listitem>
      <simpara>
       Se o item está ausente ou não, ou seja, o Subversion sabe que
       deveria haver algo lá, mas não há. (Definido somente se
       &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>incomplete</varname></term>
     <listitem>
      <simpara>
       Se o arquivo de entradas de um diretório está incompleto ou não.
       (Definido somente se &true;.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_date</varname></term>
     <listitem>
      <simpara>
       Inteiro com o timestamp Unix da data/horário do último envio. (Não afetado por <parameter>update</parameter>.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_rev</varname></term>
     <listitem>
      <simpara>
       Inteiro com a revisão do último envio. (Não afetado por <parameter>update</parameter>.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>cmt_author</varname></term>
     <listitem>
      <simpara>
       String com o nome do autor do último envio. (Não afetado por <parameter>update</parameter>.)
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>prop_time</varname></term>
     <listitem>
      <simpara>
       Inteiro com o timestamp Unix do último horário atualizado para as propriedades.
      </simpara>
     </listitem>
   </varlistentry>
   <varlistentry>
    <term><varname>text_time</varname></term>
     <listitem>
      <simpara>
       Inteiro com o timestamp Unix do último horário atualizado para o texto.
      </simpara>
     </listitem>
   </varlistentry>
   <!--
   <varlistentry>
    <term><varname></varname></term>
     <listitem>
      <simpara>

      </simpara>
     </listitem>
   </varlistentry>
   -->
  </variablelist>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->

 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here</entry>
       <entry>Description of change</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo básico</title>
    <para>
     Este exemplo demonstra um uso teórico básico desta função.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
print_r(svn_status(realpath('wc')));
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array (
    [0] => Array (
        [path] => /home/bob/wc/sandwich.txt
        [text_status] => 8 // item foi modificado
        [repos_text_status] => 1 // nenhuma informação disponível, use 'update'
        [prop_status] => 3 // sem alterações
        [repos_prop_status] => 1 // nenhuma informação disponível, use 'update'
        [name] => sandwich.txt
        [url] => http://www.example.com/svnroot/deli/trunk/sandwich.txt
        [repos] => http://www.example.com/svnroot/
        [revision] => 123
        [kind] => 1 // arquivo
        [schedule] => 0 // nenhuma ação especial programada
        [cmt_date] => 1165543135
        [cmt_rev] => 120
        [cmt_author] => Alice
        [prop_time] => 1180201728
        [text_time] => 1180201729
    )
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.experimental.func;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>svn_update</function></member>
    <member><function>svn_log</function></member>
    <member><link xlink:href="&url.svn.manual.status;">Documentação do SVN sobre svn status</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
