<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 715a125af5a86f0e6d6d5aa6cfa9c45257a433ac Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.svn-log" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>svn_log</refname>
  <refpurpose>Retorna as mensagens de registro de envios de uma URL de repositório</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>svn_log</methodname>
   <methodparam><type>string</type><parameter>repos_url</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>start_revision</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>end_revision</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>SVN_DISCOVER_CHANGED_PATHS | SVN_STOP_ON_COPY</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>svn_log</function> retorna o histórico completo do item na URL do repositório
   <parameter>repos_url</parameter>, ou o histórico de uma revisão específica
   se <parameter>start_revision</parameter> estiver definido. Esta função é equivalente
   a <userinput>svn log --verbose -r $start_revision $repos_url</userinput>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>repos_url</parameter></term>
     <listitem>
      <para>
       URL do repositório do item do qual será recuperado o histórico de registros.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start_revision</parameter></term>
     <listitem>
      <para>
       Número de revisão do primeiro registro a ser recuperado. Use
       <constant>SVN_REVISION_HEAD</constant> para recuperar o registro
       da revisão mais recente.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>end_revision</parameter></term>
     <listitem>
      <para>
       Número de revisão do último registro a ser recuperado. O padrão é
       <parameter>start_revision</parameter> se especificado ou
       <constant>SVN_REVISION_INITIAL</constant> caso contrário.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Número de registros a serem recuperados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Qualquer combinação de <constant>SVN_OMIT_MESSAGES</constant>,
       <constant>SVN_DISCOVER_CHANGED_PATHS</constant> e
       <constant>SVN_STOP_ON_COPY</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Em caso de sucesso, esta função retorna uma lista de arquivos em array no formato
   de:
   <screen>
<![CDATA[
[0] => Array, ordenado pela revisão mais recente (mais alta) primeiro
(
    [rev] => número de revisão inteiro
    [author] => string com nome do autor
    [msg] => string com mensagem de registro
    [date] => string com data formatada conforme ISO 8601, ou seja, date('c')
    [paths] => Array, descrevendo os arquivos modificados
        (
            [0] => Array
                (
                    [action] => string com a letra explicando a alteração
                    [path] =>  caminho absoluto do repositório do arquivo alterado
                )
            [1] => ...
        )
)
[1] => ...
]]>
    </screen>
  </para>
  <note>
   <para>
    A saída será sempre um array de arrays indexados numericamente,
    mesmo quando não houver nenhuma ou apenas uma mensagem de registro.
   </para>
  </note>
  <para>
   O valor de <varname>action</varname> é um subconjunto da
   <link xlink:href="&url.svn.manual.status;">saída de status
   na primeira coluna</link>, onde os valores possíveis são:
  </para>
  <table>
   <title>Ações</title>
   <tgroup cols="2">
     <thead>
      <row>
       <entry>Letra</entry>
       <entry>Descrição</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>M</entry>
       <entry>Itens/propriedades foram modificados</entry>
      </row>
      <row>
       <entry>A</entry>
       <entry>Item foi adicionado</entry>
      </row>
      <row>
       <entry>D</entry>
       <entry>Item foi excluído</entry>
      </row>
      <row>
       <entry>R</entry>
       <entry>Item foi substituído</entry>
      </row>
     </tbody>
    </tgroup>
  </table>
  <para>
   Se nenhuma alteração foi feita no item, um array vazio será retornado.
  </para>
 </refsect1>

 <!-- Use when ERRORS exist
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   When does this function throw E_* level errors, or exceptions?
  </para>
 </refsect1>
 -->

 <!-- Use when a CHANGELOG exists
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Enter the PHP version of change here</entry>
       <entry>Description of change</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>svn_log</function></title>
    <programlisting role="php">
<![CDATA[
<?php
print_r( svn_log('http://www.example.com/', 23) );
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [0] => Array
    (
        [rev] => 23
        [author] => 'joe'
        [msg] => 'Add cheese and salami to our sandwich.'
        [date] => '2007-04-06T16:00:27-04:00'
        [paths] => Array
            (
                [0] => Array
                    (
                        [action] => 'M'
                        [path] =>  '/sandwich.txt'
                    )
            )
    )
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.experimental.func;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <link xlink:href="&url.svn.manual.log;">
      Documentação do SVN sobre svn log
     </link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
