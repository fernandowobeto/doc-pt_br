<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 919c8a799262f08bb0da4b70ab52f07ec670fc17 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="eventbufferevent.free" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EventBufferEvent::free</refname>
  <refpurpose>Libera um evento de buffer</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <type>void</type>
   <methodname>EventBufferEvent::free</methodname>
   <void />
  </methodsynopsis>
  <para>
   Libera recursos alocados pelo evento de buffer.
  </para>
  <para>
   Geralmente não há necessidade de chamar esse método, já que normalmente ele é chamado
   dentro de destruidores de objetos internos. No entanto, às vezes existe um script
   de longa duração alocando muitas instâncias, ou um script com uso pesado de memória,
   onde é necessário liberar recursos o mais rápido possível. Nesses casos,
   <methodname>EventBufferEvent::free</methodname>
   pode ser usado para proteger o script contra execução até o
   <literal>memory_limit</literal>
   .
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
