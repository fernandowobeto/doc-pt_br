<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f80105b4fc1196bd8d5fecb98d686b580b1ff65d Maintainer: leonardolara Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.oci-set-prefetch">
 <refnamediv>
  <refname>oci_set_prefetch</refname>
  <refpurpose>Define o número de linhas a serem pré-buscadas pelas consultas</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>oci_set_prefetch</methodname>
   <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>rows</parameter></methodparam>
  </methodsynopsis>
  <para>
   Define o número de linhas a serem armazenadas em buffer pelas bibliotecas do Oracle Client
   após uma chamada de consulta bem-sucedida
   a <function>oci_execute</function> e para cada
   solicitação de busca interna subsequente ao banco de dados. Para consultas que retornam um
   grande número de linhas, o desempenho pode ser significativamente melhorado
   aumentando a contagem de pré-busca acima do
   valor padrão
   <link linkend="ini.oci8.default-prefetch">oci8.default_prefetch</link>.
  </para>
  <para>
   A pré-busca é a maneira eficiente da Oracle de retornar mais de uma
   linha de dados do banco de dados em cada solicitação de rede. Isso pode
   resultar em melhor utilização da rede e da CPU. O buffer de
   linhas é interno ao OCI8 e o comportamento das funções de busca
   do OCI8 permanece inalterado, independentemente da contagem de pré-busca. Por
   exemplo, <function>oci_fetch_row</function> sempre retornará uma
   linha. O buffer de pré-busca é por instrução e não é usado por
   instruções reexecutadas ou por outras conexões.
  </para>
  <para>
   Chame <function>oci_set_prefetch</function> antes
   de chamar <function>oci_execute</function>.
  </para>
  <para>
   Uma meta de ajuste é definir o valor de pré-busca para um tamanho razoável
   para a rede e o banco de dados manipularem. Para consultas que retornam um
   número muito grande de linhas, a eficiência geral do sistema pode ser melhor se
   as linhas forem recuperadas do banco de dados em vários blocos (ou seja, definir o
   valor de pré-busca menor que o número de linhas). Isso permite que o
   banco de dados manipule as instruções de outros usuários enquanto o script PHP está
   processando o conjunto atual de linhas.
  </para>
  <para>
   A pré-busca de consultas foi introduzida no Oracle 8<emphasis>i</emphasis>. REF CURSOR
   A pré-busca de CURSOR REF foi introduzida no Oracle 11<emphasis>g</emphasis>R2 e ocorre quando o PHP é
   vinculado às bibliotecas do cliente Oracle 11<emphasis>g</emphasis>R2 (ou posterior).
   A pré-busca de cursor aninhado foi
   introduzida no Oracle 11<emphasis>g</emphasis>R2 e requer que tanto as bibliotecas do cliente Oracle
   quanto o banco de dados sejam da versão 11<emphasis>g</emphasis>R2 ou superior.
  </para>
  <para>
   A pré-busca não é suportada quando consultas contêm colunas LONG ou LOB.
   O valor da pré-busca é ignorado e buscas de linha única serão usadas
   em todas as situações em que a pré-busca não for suportada.
  </para>
  <para>
   Ao utilizar o Oracle Database 12<emphasis>c</emphasis>, o valor de pré-busca
   definido pelo PHP pode ser substituído pelo arquivo de configuração <literal>oraaccess.xml</literal> do cliente
   da Oracle. Consulte
   a documentação da Oracle para obter mais detalhes.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
       &oci.arg.statement.id;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>rows</parameter></term>
     <listitem>
      <para>
       O número de linhas a serem pré-buscadas, &gt;= 0
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Alterando o valor de pré-busca padrão para uma consulta</title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/XE');

$stid = oci_parse($conn, 'SELECT * FROM myverybigtable');
oci_set_prefetch($stid, 300);  // Defina antes de chamar oci_execute()
oci_execute($stid);

echo "<table border='1'>\n";
while ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "&nbsp;")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Alterando a pré-busca padrão para uma busca de CURSOR REF</title>
    <programlisting role="php">
<![CDATA[
<?php
/*
  Crie o procedimento armazenado PL/SQL como:

  CREATE OR REPLACE PROCEDURE myproc(p1 OUT SYS_REFCURSOR) AS
  BEGIN
    OPEN p1 FOR SELECT * FROM all_objects WHERE ROWNUM < 5000;
  END;
*/

$conn = oci_connect('hr', 'welcome', 'localhost/XE');

$stid = oci_parse($conn, 'BEGIN myproc(:rc); END;');
$refcur = oci_new_cursor($conn);
oci_bind_by_name($stid, ':rc', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

// Altera a pré-busca antes de executar o cursor.
// A pré-busca do REF CURSOR funciona quando o PHP está vinculado a bibliotecas de cliente Oracle 11gR2 ou posterior
oci_set_prefetch($refcur, 200);
oci_execute($refcur);

echo "<table border='1'>\n";
while ($row = oci_fetch_array($refcur, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "&nbsp;")."</td>\n";
    }
    echo "</tr>\n";
}
echo "</table>\n";

oci_free_statement($refcur);
oci_free_statement($stid);
oci_close($conn);

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Se o PHP OCI8 buscar um CURSOR REF e, em seguida, passar o CURSOR REF de volta
   para um segundo procedimento PL/SQL para processamento posterior,
   defina a contagem de pré-busca do CURSOR REF como <literal>0</literal> para
   evitar que linhas sejam "perdidas" do conjunto de resultados. O valor da pré-busca é
   o número de linhas extras buscadas em cada solicitação interna do OCI8 para
   o banco de dados, portanto, defini-lo como <literal>0</literal> significa apenas
   buscar uma linha por vez.
   <example>
    <title>Definindo o valor de pré-busca ao passar um CURSOR REF de volta para o Oracle</title>
    <programlisting role="php">
<![CDATA[
<?php

$conn = oci_connect('hr', 'welcome', 'localhost/orcl');

// Obtém o CURSOR REF
$stid = oci_parse($conn, 'BEGIN myproc(:rc_out); END;');
$refcur = oci_new_cursor($conn);
oci_bind_by_name($stid, ':rc_out', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

// Exibe duas linhas, mas não pré-busca nenhuma linha extra, caso contrário
// essas linhas extras não seriam passadas de volta para myproc_use_rc().
oci_set_prefetch($refcur, 0);
oci_execute($refcur);
$row = oci_fetch_array($refcur);
var_dump($row);
$row = oci_fetch_array($refcur);
var_dump($row);

// Passa o CURSOR REF para myproc_use_rc() para realizar mais processamento de dados
// com o conjunto de resultados
$stid = oci_parse($conn, 'begin myproc_use_rc(:rc_in); end;');
oci_bind_by_name($stid, ':rc_in', $refcur, -1, OCI_B_CURSOR);
oci_execute($stid);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     Opção INI
     <link linkend="ini.oci8.default-prefetch">oci8.default_prefetch</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
