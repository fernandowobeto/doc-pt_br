<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a277389c9d2d5a940fcd6dbe62da7e109282379d Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.getrusage" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>getrusage</refname>
  <refpurpose>Obtém os usos atuais de recursos</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>getrusage</methodname>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Esta é uma interface para <command>getrusage(2)</command>. Ele obtém dados retornados
   a partir da chamada de sistema.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Se <parameter>mode</parameter> for 1, getrusage será chamado com
       <constant>RUSAGE_CHILDREN</constant>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um array associativo contendo os dados retornados da chamada de
   sistema. Todas as entradas são acessíveis usando seus nomes de campo documentados.
   Retorna &false; em caso de falha.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>getrusage</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$dat = getrusage();
echo $dat["ru_oublock"];       // número de operações de saída em bloco
echo $dat["ru_inblock"];       // número de operações de entrada em bloco
echo $dat["ru_msgsnd"];        // número de mensagens IPC enviadas
echo $dat["ru_msgrcv"];        // número de mensagens IPC recebidas
echo $dat["ru_maxrss"];        // tamanho máximo de conjunto residente
echo $dat["ru_ixrss"];         // tamanho integral da memória compartilhada
echo $dat["ru_idrss"];         // tamanho integral de dados não compartilhados
echo $dat["ru_minflt"];        // número de recuperações de página (falhas de página soft)
echo $dat["ru_majflt"];        // número de falhas de página (falhas de página graves)
echo $dat["ru_nsignals"];      // número de sinais recebidos
echo $dat["ru_nvcsw"];         // número de mudanças voluntárias de contexto
echo $dat["ru_nivcsw"];        // número de mudanças de contexto involuntárias
echo $dat["ru_nswap"];         // número de trocas de páginas
echo $dat["ru_utime.tv_usec"]; // tempo usado pelo usuário (microssegundos)
echo $dat["ru_utime.tv_sec"];  // tempo usado pelo usuário (segundos)
echo $dat["ru_stime.tv_usec"]; // tempo do sistema usado (microssegundos)
echo $dat["ru_stime.tv_sec"];  // tempo do sistema usado (segundos)
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    No Windows, <function>getrusage</function> irá retornar somente os seguintes
    membros:
   </para>
   <para>
    <simplelist>
     <member><literal>"ru_stime.tv_sec"</literal></member>
     <member><literal>"ru_stime.tv_usec"</literal></member>
     <member><literal>"ru_utime.tv_sec"</literal></member>
     <member><literal>"ru_utime.tv_usec"</literal></member>
     <member>
      <literal>"ru_majflt"</literal> (somente se <parameter>mode</parameter> for
      <constant>RUSAGE_SELF</constant>)
     </member>
     <member>
      <literal>"ru_maxrss"</literal> (somente se <parameter>mode</parameter> for
      <constant>RUSAGE_SELF</constant>)
     </member>
    </simplelist>
   </para>
   <para>
    Se <function>getrusage</function> for chamada com <parameter>mode</parameter>
    definido como <literal>1</literal> (<constant>RUSAGE_CHILDREN</constant>), então
    o uso de recursos para threads será coletado (ou seja, que internamente a função
    é chamada com <constant>RUSAGE_THREAD</constant>).
   </para>
  </note>
  <note>
   <para>
    No BeOS 2000, apenas os seguintes membros são retornados:
   </para>
   <para>
    <simplelist>
     <member><literal>"ru_stime.tv_sec"</literal></member>
     <member><literal>"ru_stime.tv_usec"</literal></member>
     <member><literal>"ru_utime.tv_sec"</literal></member>
     <member><literal>"ru_utime.tv_usec"</literal></member>
    </simplelist>
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>Página do manual do sistema operacional sobre o comando <command>getrusage(2)</command></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
