<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="phar.addfile" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Phar::addFile</refname>
  <refpurpose>Adiciona um arquivo do sistema de arquivos ao arquivo phar</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type>void</type><methodname>Phar::addFile</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>localName</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  &phar.write;

  <para>
   Com este método, qualquer arquivo ou URL pode ser adicionado ao arquivo phar. Se
   o segundo parâmetro opcional <parameter>localName</parameter> for uma &string;,
   o arquivo será armazenado no arquivo com esse nome; caso contrário, o
   parâmetro <literal>file</literal> será usado como o caminho para armazenar
   o arquivo. URLs devem ter um nome local ou uma exceção será lançada.
   Este método é semelhante a <function>ZipArchive::addFile</function>.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Caminho completo ou relativo para um arquivo no disco a ser adicionado
       ao arquivo phar.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>localName</parameter></term>
     <listitem>
      <para>
       Caminho onde o arquivo será armazenado no arquivo compactado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Nenhum valor de retorno, exceção é lançada em caso de falha.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>localName</parameter> agora é anulável.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Um exemplo de <function>Phar::addFile</function></title>
    <programlisting role="php">
<![CDATA[
<?php
try {
    $a = new Phar('/path/to/phar.phar');

    $a->addFile('/full/path/to/file');
    // demonstra como este arquivo é armazenado
    $b = $a['full/path/to/file']->getContent();

    $a->addFile('/full/path/to/file', 'my/file.txt');
    $c = $a['my/file.txt']->getContent();

    // demonstra o uso de URL
    $a->addFile('http://www.example.com', 'example.html');
} catch (Exception $e) {
    // manipula erros aqui
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &phar.note.performance;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::offsetSet</function></member>
    <member><function>PharData::addFile</function></member>
    <member><function>Phar::addFromString</function></member>
    <member><function>Phar::addEmptyDir</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
