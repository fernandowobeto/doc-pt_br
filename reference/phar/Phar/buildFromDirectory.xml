<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="phar.buildfromdirectory" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::buildFromDirectory</refname>
  <refpurpose>Constrói um arquivo phar a partir dos arquivos dentro de um diretório</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type>array</type><methodname>Phar::buildFromDirectory</methodname>
   <methodparam><type>string</type><parameter>directory</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>pattern</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  &phar.write;
  <para>
   Preenche um arquivo phar a partir do conteúdo do diretório. O segundo parâmetro
   opcional é uma expressão regular (pcre) usada para excluir arquivos.
   Qualquer nome de arquivo que corresponda à expressão regular será incluído, todos os outros serão
   excluídos. Para um controle mais refinado, use <function>Phar::buildFromIterator</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>directory</parameter></term>
     <listitem>
      <para>
       O caminho completo ou relativo para o diretório que contém todos os arquivos
       a serem adicionados ao arquivo.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Uma expressão regular pcre opcional usada para filtrar a
       lista de arquivos. Somente caminhos de arquivo que correspondam à expressão regular
       serão incluídos no arquivo.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>Phar::buildFromDirectory</function> retorna um array associativo
   mapeando o caminho interno do arquivo para o caminho completo do arquivo no
   sistema de arquivos.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Este método lança <classname>BadMethodCallException</classname> quando não é possível
   instanciar os iteradores de diretório interno,
   ou uma <classname>PharException</classname> se houver erros
   ao salvar o arquivo phar.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.1.0</entry>
      <entry>
       <methodname>Phar::buildFromDirectory</methodname> não retorna mais &false;.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
    <title>Um exemplo de <function>Phar::buildFromDirectory</function></title>
  <para>

  </para>
  <para>
   <programlisting role="php">
    <![CDATA[
<?php
// cria com o apelido "project.phar"
$phar = new Phar('project.phar', 0, 'project.phar');
// adiciona todos os arquivos no projeto
$phar->buildFromDirectory(dirname(__FILE__) . '/project');
$phar->setStub($phar->createDefaultStub('cli/index.php', 'www/index.php'));

$phar2 = new Phar('project2.phar', 0, 'project2.phar');
// adiciona todos os arquivos do projeto, inclui apenas arquivos php
$phar2->buildFromDirectory(dirname(__FILE__) . '/project', '/\.php$/');
$phar2->setStub($phar->createDefaultStub('cli/index.php', 'www/index.php'));
?>
]]>
   </programlisting>
  </para>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::buildFromIterator</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
