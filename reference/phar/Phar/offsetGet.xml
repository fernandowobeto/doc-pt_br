<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="phar.offsetget" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Phar::offsetGet</refname>
  <refpurpose>Obtém um objeto <classname>PharFileInfo</classname> para um arquivo específico</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type>SplFileInfo</type><methodname>Phar::offsetGet</methodname>
   <methodparam><type>string</type><parameter>localName</parameter></methodparam>
  </methodsynopsis>

  <para>
   Esta é uma implementação da interface <interfacename>ArrayAccess</interfacename>
   que permite a manipulação direta do conteúdo de um arquivo Phar usando
   colchetes de acesso a arrays. <methodname>Phar::offsetGet</methodname> é usado
   para recuperar arquivos de um arquivo Phar.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>localName</parameter></term>
     <listitem>
      <para>
       O nome do arquivo (caminho relativo) a ser procurado em um Phar.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Um objeto <classname>PharFileInfo</classname> é retornado e pode ser usado para
   iterar sobre o conteúdo de um arquivo ou recuperar informações sobre o arquivo atual.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Este método lança <classname>BadMethodCallException</classname> se o arquivo
   não existir no arquivo Phar.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>Phar::offsetGet</function></title>
    <para>
     Assim como todas as classes que implementam a interface <classname>ArrayAccess</classname>,
     <methodname>Phar::offsetGet</methodname> é automaticamente
     chamado ao usar o operador de colchetes angulares <literal>[]</literal>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar(dirname(__FILE__) . '/meuphar.phar', 0, 'meuphar.phar');
$p['existe.txt'] = "arquivo existe\n";
try {
    // chama offsetGet() automaticamente
    echo $p['existe.txt'];
    echo $p['naoexiste.txt'];
} catch (BadMethodCallException $e) {
    echo $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
arquivo existe
Entry naoexiste.txt does not exist
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::offsetExists</function></member>
    <member><function>Phar::offsetSet</function></member>
    <member><function>Phar::offsetUnset</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
