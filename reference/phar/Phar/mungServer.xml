<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: a634e78ae4b361dca8423e5bbbdd1c9468247850 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="phar.mungserver" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Phar::mungServer</refname>
  <refpurpose>Define uma lista de até 4 variáveis ​​$_SERVER que devem ser modificadas para execução</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>final</modifier> <modifier>public</modifier> <modifier>static</modifier> <type>void</type><methodname>Phar::mungServer</methodname>
   <methodparam><type>array</type><parameter>variables</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>Phar::mungServer</function> só deve ser chamado dentro do
   stub de um arquivo phar.
  </para>
  <para>
   Define uma lista de até 4 variáveis ​​<varname>$_SERVER</varname> que devem ser
   modificadas para execução.
   As variáveis ​​que podem ser modificadas para remover rastros da execução do PHAR são
   <literal>REQUEST_URI</literal>, <literal>PHP_SELF</literal>,
   <literal>SCRIPT_NAME</literal> e <literal>SCRIPT_FILENAME</literal>.
  </para>
  <para>
   Por si só, este método não faz nada. Somente quando combinado com
   <function>Phar::webPhar</function> ele entra em vigor, e somente quando o arquivo
   solicitado é um arquivo PHP a ser analisado. Observe que as variáveis
   <literal>PATH_INFO</literal> e <literal>PATH_TRANSLATED</literal>
   são sempre modificadas.
  </para>
  <para>
   Os valores originais das variáveis ​​modificadas são armazenados no array SERVER
   com <literal>PHAR_</literal> prefixado, então, por exemplo,
   <literal>SCRIPT_NAME</literal> seria salvo como <literal>PHAR_SCRIPT_NAME</literal>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>variables</parameter></term>
     <listitem>
      <para>
       Um array de qualquer uma das strings
       <literal>REQUEST_URI</literal>, <literal>PHP_SELF</literal>,
       <literal>SCRIPT_NAME</literal> e <literal>SCRIPT_FILENAME</literal>.
       Outros valores disparam uma exceção, e <function>Phar::mungServer</function>
       diferencia maiúsculas de minúsculas.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Sem retorno.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lança <classname>UnexpectedValueException</classname> se algum problema for
   encontrado com os dados passados.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Um exemplo de <function>Phar::mungServer</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// stub de exemplo
Phar::mungServer(array('REQUEST_URI'));
Phar::webPhar();
__HALT_COMPILER();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Phar::webPhar</function></member>
    <member><function>Phar::setStub</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
