<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="phar.compress" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Phar::compress</refname>
  <refpurpose>Compacta todo o arquivo Phar usando compactação Gzip ou Bzip2</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="Phar">
   <modifier>public</modifier> <type class="union"><type>Phar</type><type>null</type></type><methodname>Phar::compress</methodname>
   <methodparam><type>int</type><parameter>compression</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>extension</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
 &phar.write;

  <para>
   Para arquivos PHAR baseados em tar e PHAR, este método compacta o arquivo inteiro usando
   compactação gzip ou bzip2. O arquivo resultante pode ser processado com o comando
   gunzip/bunzip ou acessado direta e transparentemente com a
   extensão Phar.
  </para>
  <para>
   Para arquivos phar baseados em Zip, este método falha com uma exceção.
   A extensão <link linkend="ref.zlib">zlib</link> deve estar habilitada para compactar
   com compactação gzip, a extensão <link linkend="ref.bzip2">bzip2</link> deve estar
   habilitada para compactar com compactação bzip2.
   Como acontece com todas as funcionalidades que modificam o conteúdo de um phar, a variável INI
   <link linkend="ini.phar.readonly">phar.readonly</link> deve estar desativada
   para funcionar.
  </para>
  <para>
   Além disso, este método renomeia automaticamente o arquivo, anexando <literal>.gz</literal>,
   <literal>.bz2</literal> ou removendo a extensão se <literal>Phar::NONE</literal> for passado para
   remover a compactação. Alternativamente, uma extensão de arquivo pode ser especificada com o segundo
   parâmetro.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>compression</parameter></term>
     <listitem>
      <para>
       A compactação deve ser <literal>Phar::GZ</literal>,
       <literal>Phar::BZ2</literal> para adicionar compactação ou <literal>Phar::NONE</literal>
       para remover compactação.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>extension</parameter></term>
     <listitem>
      <para>
       Por padrão, a extensão é <literal>.phar.gz</literal>
       ou <literal>.phar.bz2</literal> para compactar arquivos phar, e
       <literal>.phar.tar.gz</literal> ou <literal>.phar.tar.bz2</literal> para
       compactar arquivos tar. Para descompactação, as extensões de arquivo padrão
       são <literal>.phar</literal> e <literal>.phar.tar</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um objeto <classname>Phar</classname> ou &null; em caso de falha.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lança <classname>BadMethodCallException</classname> se
   a variável INI <link linkend="ini.phar.readonly">phar.readonly</link>
   estiver ativada, a extensão <link linkend="ref.zlib">zlib</link>
   não estiver disponível ou a extensão <link linkend="ref.bzip2">bzip2</link>
   não estiver habilitada.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>extension</parameter> agora é anulável.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Um exemplo de <function>Phar::compress</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$p = new Phar('/caminho/para/meu.phar', 0, 'meu.phar');
$p['meuarquivo.txt'] = 'olá';
$p['meuarquivo2.txt'] = 'olá';
$p1 = $p->compress(Phar::GZ); // copia para /caminho/para/meu.phar.gz
$p2 = $p->compress(Phar::BZ2); // copia para /caminho/para/meu.phar.bz2
$p3 = $p2->compress(Phar::NONE); // exceção: /caminho/para/meu.phar já existe
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PharFileInfo::getCompressedSize</function></member>
    <member><function>PharFileInfo::isCompressed</function></member>
    <member><function>PharFileInfo::compress</function></member>
    <member><function>PharFileInfo::decompress</function></member>
    <member><function>PharData::compress</function></member>
    <member><function>Phar::canCompress</function></member>
    <member><function>Phar::isCompressed</function></member>
    <member><function>Phar::decompress</function></member>
    <member><function>Phar::getSupportedCompression</function></member>
    <member><function>Phar::compressFiles</function></member>
    <member><function>Phar::decompressFiles</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
