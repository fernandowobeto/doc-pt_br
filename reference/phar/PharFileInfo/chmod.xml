<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: f03806fcd8fe03a0501bd40b6e3939ff6589a1d2 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="pharfileinfo.chmod" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PharFileInfo::chmod</refname>
  <refpurpose>Define bits de permissão específicos do arquivo</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="PharFileInfo">
   <modifier>public</modifier> <type>void</type><methodname>PharFileInfo::chmod</methodname>
   <methodparam><type>int</type><parameter>perms</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>PharFileInfo::chmod</function> permite a configuração do bit de permissão
   do arquivo executável, bem como bits somente leitura. Os bits graváveis ​​são
   ignorados e definidos em tempo de execução com base na
   variável INI <link linkend="ini.phar.readonly">phar.readonly</link>.
   Assim como acontece com todas as funcionalidades que modificam o conteúdo de
   um phar, a variável INI <link linkend="ini.phar.readonly">phar.readonly</link>
   deve estar desativada para funcionar se o arquivo estiver dentro de um arquivo <classname>Phar</classname>.
   Arquivos dentro de arquivos <classname>PharData</classname> não têm
   essa restrição.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>perms</parameter></term>
     <listitem>
      <para>
       permissões (consulte <function>chmod</function>)
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Um exemplo de <function>PharFileInfo::chmod</function></title>
    <para>
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// garantindo que o arquivo não existe
@unlink('novophar.phar');
try {
    $p = new Phar('novophar.phar', 0, 'novophar.phar');
    $p['arquivo.sh'] = '#!/usr/local/lib/php
    <?php echo "olá"; ?>';
    // define o bit executável
    $p['arquivo.sh']->chmod(0555);
    var_dump($p['arquivo.sh']->isExecutable());
} catch (Exception $e) {
    echo 'Não foi possível criar/modificar o phar: ', $e;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(true)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
