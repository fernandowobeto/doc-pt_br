<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 96c9d88bad9a7d7d44bfb7f26c226df7ee9ddf26 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<chapter xml:id="phar.creating" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Criando Arquivos Phar</title>

 <section xml:id="phar.creating.intro" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Criando Arquivos Phar: Introdução</title>
 <para>
  Será escrito na íntegra em breve. Antes de ler isto, leia
  <link linkend="phar.using">Como usar os Arquivos Phar</link>.
 </para>
 <para>
  Um ótimo lugar para começar é lendo sobre <function>Phar::buildFromIterator</function>,
  e as especificações das opções de <link linkend="phar.fileformat">formato de arquivo</link>
  disponíveis para arquivos. Uma boa compreensão do que é e o que faz um stub é crucial
  para a criação de arquivos phar, portanto, <function>Phar::setStub</function> e
  <function>Phar::createDefaultStub</function> também são bons lugares para começar.
  Se uma aplicação baseada na web estiver sendo distribuída, é crucial conhecer
  <function>Phar::webPhar</function> e o método relacionado
  <function>Phar::mungServer</function>. Qualquer aplicação que acesse
  seus próprios arquivos também deve considerar o uso de <function>Phar::interceptFileFuncs</function>.
 </para>
</section>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
