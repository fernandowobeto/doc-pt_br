<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 523e43a7d96eab72bb16ccfc08b9b4741ab5322a Maintainer: leonardolara Status: ready -->
<refentry xml:id="simplexmlelement.current" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::current</refname>
  <refpurpose>Retorna o elemento atual</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SimpleXMLElement">
   <modifier>public</modifier> <type>SimpleXMLElement</type><methodname>SimpleXMLElement::current</methodname>
   <void/>
  </methodsynopsis>

  <warning>
   <simpara>
    Antes do PHP 8.0, <methodname>SimpleXMLElement::current</methodname> era declarado
    somente na sub-classe <classname>SimpleXMLIterator</classname>.
   </simpara>
  </warning>

  <para>
   Este método retorna o elemento atual como um objeto <classname>SimpleXMLElement</classname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o elemento atual como um objeto <classname>SimpleXMLElement</classname>.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Lança um <classname>Error</classname> em caso de falha.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.1.0</entry>
      <entry>
       Um <classname>Error</classname> agora é lançado se
       <methodname>SimpleXMLElement::current</methodname> for chamado em um
       iterador inválido. Anteriormente, &null; era retornado.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Retornando o elemento atual</title>
    <programlisting role="php">
<![CDATA[
<?php
$xmlElement = new SimpleXMLElement('<books><book>PHP basics</book><book>XML basics</book></books>');

$xmlElement->rewind(); // retrocede ao primeiro elemento, caso contrário current() não funcionará.
var_dump($xmlElement->current());
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
object(SimpleXMLElement)#2 (1) {
  [0]=>
  string(10) "PHP basics"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SimpleXMLElement::key</methodname></member>
    <member><methodname>SimpleXMLElement::next</methodname></member>
    <member><methodname>SimpleXMLElement::rewind</methodname></member>
    <member><methodname>SimpleXMLElement::valid</methodname></member>
    <member><classname>SimpleXMLElement</classname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
