<?xml version="1.0" encoding="utf-8"?><!-- EN-Revision: 49ef347a18b037370b6bd8e690096270f1780153 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="reflectionproperty.setrawvalue" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ReflectionProperty::setRawValue</refname>
  <refpurpose>Define o valor de uma propriedade, ignorando um gancho de configuração se definido</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="ReflectionProperty">
   <modifier>public</modifier> <type>void</type><methodname>ReflectionProperty::setRawValue</methodname>
   <methodparam><type>object</type><parameter>object</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Define o valor de uma propriedade, ignorando um gancho <literal>set</literal>, se definido.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>object</parameter></term>
    <listitem>
     <simpara>
      O objeto no qual o valor da propriedade será definido.
     </simpara>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>value</parameter></term>
    <listitem>
     <simpara>
      O valor a ser escrito. Ele ainda deve ser válido de acordo com o tipo da propriedade.
     </simpara>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   &return.void;
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simpara>
   Se a propriedade for virtual, um <classname>Error</classname> será gerado,
   pois não há valor bruto para definir.
  </simpara>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="reflectionproperty.setrawvalue.example.basic">
   <title>Exemplo de <methodname>ReflectionProperty::setRawValue</methodname></title>
   <programlisting role="php">
<![CDATA[
<?php
class Example
{
    public int $age {
        set {
            if ($value <= 0) {
               throw new \InvalidArgumentException();
            }
            $this->age = $value;
        }
    }
}

$example = new Example();

$rClass = new \ReflectionClass(Example::class);
$rProp = $rClass->getProperty('age');

// Eles passariam pelo gancho set e lançariam uma exceção.
try {
    $example->age = -2;
} catch (InvalidArgumentException) {
    echo "InvalidArgumentException por definir a propriedade para -2\n";
}
try {
    $rProp->setValue($example, -2);
} catch (InvalidArgumentException) {
    echo "InvalidArgumentException por usar ReflectionProperty::setValue() com -2\n";
}

// Mas isso definiria $age como -2 sem erro.
$rProp->setRawValue($example, -2);
echo $example->age;
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
InvalidArgumentException por definir a propriedade para -2
InvalidArgumentException por usar ReflectionProperty::setValue() com -2
-2
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><link linkend="language.oop5.visibility-members-aviz">Visibilidade assimétrica da propriedade</link></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
