<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9960a09a5705102bf4dd0ce63e03d9ec716d0015 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.imagegif" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagegif</refname>
  <refpurpose>&gd.image.output;</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagegif</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>resource</type><type>string</type><type>null</type></type><parameter>file</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>imagegif</function> cria o arquivo <acronym>GIF</acronym>
   especificado em <parameter>file</parameter> a partir da imagem em <parameter>image</parameter>. O
   argumento <parameter>image</parameter> é o retorno da função
   <function>imagecreate</function> ou
   <literal>imagecreatefrom*</literal>.
  </para>
  <para>
   O formato da imagem será <acronym>GIF87a</acronym> a menos que
   a imagem tenha se tornado transparente com
   <function>imagecolortransparent</function>, e neste caso o
   formato da imagem será <acronym>GIF89a</acronym>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>file</parameter></term>
     <listitem>
      <para>&gd.image.path;</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
  &gd.return.trueonerror;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     &gd.changelog.image-param;
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Mostrando uma imagem usando <function>imagegif</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Cria uma nova instância de imagem
$im = imagecreatetruecolor(100, 100);

// Deixa o fundo branco
imagefilledrectangle($im, 0, 0, 99, 99, 0xFFFFFF);

// Desenha uma string na imagem
imagestring($im, 3, 40, 20, 'GD Library', 0xFFBA00);

// Mostra a imagem no navegador
header('Content-Type: image/gif');

imagegif($im);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Convertendo uma imagem PNG para GIF usando <function>imagegif</function></title>
    <programlisting role="php">
<![CDATA[
<?php

// Carrega o PNG
$png = imagecreatefrompng('./php.png');

// Grava a imagem como GIF
imagegif($png, './php.gif');

// Pronto
echo 'Convertida a imagem PNG para GIF com sucesso!';
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    O extrato de código a seguir permite esrever aplicações
    PHP mais portáveis através de auto-detecção do
    tipo de suporte GD disponível. Substitua
    sequência <literal>header ("Content-Type: image/gif");
    imagegif ($im);</literal> pela sequência mais flexível:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
// Cria uma nova instância de imagem
$im = imagecreatetruecolor(100, 100);

// Faz aqui algumas operações

// Lida com a saída
if(function_exists('imagegif'))
{
    // Para GIF
    header('Content-Type: image/gif');

    imagegif($im);
}
elseif(function_exists('imagejpeg'))
{
    // Para JPEG
    header('Content-Type: image/jpeg');

    imagejpeg($im, NULL, 100);
}
elseif(function_exists('imagepng'))
{
    // Para PNG
    header('Content-Type: image/png');

    imagepng($im);
}
elseif(function_exists('imagewbmp'))
{
    // Para WBMP
    header('Content-Type: image/vnd.wap.wbmp');

    imagewbmp($im);
}
else
{
    die('Não existe suporte para imagem neste servidor PHP');
}
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </note>
  <note>
   <para>
    Pode-se usar a função
    <function>imagetypes</function> para verificar
    a presenção de vários formatos de imagem suportados:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
if(imagetypes() & IMG_GIF)
{
    header('Content-Type: image/gif');
    imagegif($im);
}
elseif(imagetypes() & IMG_JPG)
{
    /* ... etc. */
}
?>
]]>
     </programlisting>
    </informalexample>
   </para>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imagepng</function></member>
   <member><function>imagewbmp</function></member>
   <member><function>imagejpeg</function></member>
   <member><function>imagetypes</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
