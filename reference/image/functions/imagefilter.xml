<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 9960a09a5705102bf4dd0ce63e03d9ec716d0015 Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.imagefilter" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagefilter</refname>
  <refpurpose>Aplica um filtro a uma imagem</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>imagefilter</methodname>
   <methodparam><type>GdImage</type><parameter>image</parameter></methodparam>
   <methodparam><type>int</type><parameter>filter</parameter></methodparam>
   <methodparam rep="repeat"><type class="union"><type>array</type><type>int</type><type>float</type><type>bool</type></type><parameter>args</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>imagefilter</function> aplica o filtro informado em
   <parameter>filter</parameter> na imagem fornecida em <parameter>image</parameter>.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>filter</parameter></term>
     <listitem>
      <para>
       <parameter>filter</parameter> pode ser uma das seguintes constantes:
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_NEGATE</constant>: Inverte todas as cores
          da imagem.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_GRAYSCALE</constant>: Converte a imagem em
          escala de cinza alterando os componentes vermelho, verde e azul para suas
          respectivas somas ponderadas, usando os mesmos coeficientes de cálculo de luminância (Y')
          da REC.601. Os componentes alfa são retidos. Para imagens de paleta, o
          resultado pode ser diferente devido a limitações da paleta.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_BRIGHTNESS</constant>: Altera o brilho
          da imagem. Use <parameter>args</parameter> para definir o nível de
          brilho. O intervalo de brilho é de -255 a 255.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_CONTRAST</constant>: Altera o contraste da
          imagem. Use <parameter>args</parameter> para definir o nível de
          contraste.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: Parecida com
          <constant>IMG_FILTER_GRAYSCALE</constant>, exceto que pode-se especificar
          a cor. Use <parameter>args</parameter>, <parameter>arg2</parameter> e
          <parameter>arg3</parameter> na forma de
          <parameter>red</parameter> (vermelho), <parameter>green</parameter> (verde),
          <parameter>blue</parameter> (azul) e <parameter>arg4</parameter> para o canal
          <parameter>alpha</parameter> (alfa). O intervalo de cada cor é de 0 a 255.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_EDGEDETECT</constant>: Usa detecção de borda para
          destacar as bordas da imagem.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_EMBOSS</constant>: Faz alto relevo da imagem.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_GAUSSIAN_BLUR</constant>: Desfoca a imagem usando
           o método gaussiano.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SELECTIVE_BLUR</constant>: Desfoca a imagem.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_MEAN_REMOVAL</constant>: Usa a remoção de média para
          alcançar um efeito de "esboço".
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SMOOTH</constant>: Torna a imagem mais suave.
          Use <parameter>args</parameter> para definir o nível de suavidade.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Aplica efeito de pixelização
          à imagem, use <parameter>args</parameter> para definir o tamanho do bloco
          e <parameter>arg2</parameter> para definir o modo do efeito de pixelização.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Aplica efeito de dispersão
          à imagem, use <parameter>args</parameter> e
          <parameter>arg2</parameter> para definir a intensidade do efeito e
          adicionalmente <parameter>arg3</parameter> para aplicar o efeito somente
          em cores de pixels selecionadas.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>args</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_BRIGHTNESS</constant>: Nível de brilho.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_CONTRAST</constant>: Nível de contraste.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.red;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SMOOTH</constant>: Nível de suavidade.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Tamanho do bloco em pixels.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Nível de subtração de efeito.
          Não pode ser maior ou igual ao nível de adição de efeito definido com
          <parameter>arg2</parameter>.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg2</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.green;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_PIXELATE</constant>: Informa se deve ser usada efeito de pixelização
          avançada ou não (o padrão é &false;).
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Nível de adição de efeito.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg3</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: &gd.value.blue;
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_SCATTER</constant>: Array opcional indexado com valores de cores
          nas quais os efeitos serão aplicados.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arg4</parameter></term>
     <listitem>
      <para>
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>IMG_FILTER_COLORIZE</constant>: Canal alfa, um valor
          entre 0 e 127. 0 indica completamente opaco e 127 indica
          completamente transparente.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simpara>
   Lança um <classname>ValueError</classname>
   se <parameter>sub</parameter> ou <parameter>plus</parameter> puderem causar um estouro de limites
   com <constant>IMG_FILTER_SCATTER</constant> definido em <parameter>filter</parameter>.
  </simpara>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.4.0</entry>
       <entry>
        Agora lança um <classname>ValueError</classname>
        se <parameter>sub</parameter> ou <parameter>plus</parameter> puderem causar um estouro de limites
        com <constant>IMG_FILTER_SCATTER</constant> definido em <parameter>filter</parameter>.
       </entry>
      </row>
      &gd.changelog.image-param;
      <row>
       <entry>7.4.0</entry>
       <entry>
        Suporte a dispersão (<constant>IMG_FILTER_SCATTER</constant>) foi adicionado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de escala de cinza com <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('dave.png');

if($im && imagefilter($im, IMG_FILTER_GRAYSCALE))
{
    echo 'Imagem convertida para escala de cinza.';

    imagepng($im, 'dave.png');
}
else
{
    echo 'Conversão para escala de cinza falhou.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo de brilho com <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('sean.png');

if($im && imagefilter($im, IMG_FILTER_BRIGHTNESS, 20))
{
    echo 'Brilho da imagem alterado.';

    imagepng($im, 'sean.png');
}
else
{
    echo 'Alteração no brilho da imagem falhou.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo de colorização com <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$im = imagecreatefrompng('philip.png');

/* R, G, B, portanto 0, 255, 0 é verde */
if($im && imagefilter($im, IMG_FILTER_COLORIZE, 0, 255, 0))
{
    echo 'Imagem tonalizada em verde com sucesso.';

    imagepng($im, 'philip.png');
}
else
{
    echo 'Tonalização em verde falhou.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo de inversão com <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Define a função de inversão de forma que seja portável
// para versões de php sem imagefilter()
function negate($im)
{
    if(function_exists('imagefilter'))
    {
        return imagefilter($im, IMG_FILTER_NEGATE);
    }

    for($x = 0; $x < imagesx($im); ++$x)
    {
        for($y = 0; $y < imagesy($im); ++$y)
        {
            $index = imagecolorat($im, $x, $y);
            $rgb = imagecolorsforindex($index);
            $color = imagecolorallocate($im, 255 - $rgb['red'], 255 - $rgb['green'], 255 - $rgb['blue']);

            imagesetpixel($im, $x, $y, $color);
        }
    }

    return(true);
}

$im = imagecreatefromjpeg('kalle.jpg');

if($im && negate($im))
{
    echo 'Imagem convertida com sucesso para cores invertidas.';

    imagejpeg($im, 'kalle.jpg', 100);
}
else
{
    echo 'Conversão para cores invertidas falhou.';
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo de pixelização com <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Carrega a logomarca do PHP, necessáio criar duas instâncias
// para mostrar as diferenças
$logo1 = imagecreatefrompng('./php.png');
$logo2 = imagecreatefrompng('./php.png');

// Cria a instância da imagem onde as diferenças serão
// mostradas
$output = imagecreatetruecolor(imagesx($logo1) * 2, imagesy($logo1));

// Aplica a pixelização para cada instância, com um bloco
// de tamanho 3
imagefilter($logo1, IMG_FILTER_PIXELATE, 3);
imagefilter($logo2, IMG_FILTER_PIXELATE, 3, true);

// Funde as diferenças na imagem de saída
imagecopy($output, $logo1, 0, 0, 0, 0, imagesx($logo1) - 1, imagesy($logo1) - 1);
imagecopy($output, $logo2, imagesx($logo2), 0, 0, 0, imagesx($logo2) - 1, imagesy($logo2) - 1);

// Mostra a diferença
header('Content-Type: image/png');
imagepng($output);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Saída do exemplo: Pixelização com imagefilter()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagefilterpixelate.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
  <para>
   <example>
    <title>Exemplo de dispersão com <function>imagefilter</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Carrega a imagem
$logo = imagecreatefrompng('./php.png');

// Aplica um efeito bem leve de dispersão à imagem
imagefilter($logo, IMG_FILTER_SCATTER, 3, 5);

// Mostra a imagem com o efeito de dispersão
header('Content-Type: image/png');
imagepng($logo);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Saída do exemplo: dispersão com imagefilter()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/scatter.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    O resultado de <constant>IMG_FILTER_SCATTER</constant> é sempre aleatório.
   </simpara>
  </note>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>imageconvolution</function></member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
