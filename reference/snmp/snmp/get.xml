<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 888d70d7d21713f7f52d497e627543dfb41fc103 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="snmp.get" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SNMP::get</refname>
  <refpurpose>Busca um objeto <acronym>SNMP</acronym></refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;

  <methodsynopsis role="SNMP">
   <modifier>public</modifier> <type>mixed</type><methodname>SNMP::get</methodname>
   <methodparam><type class="union"><type>array</type><type>string</type></type><parameter>objectId</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>preserveKeys</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Busca um objeto <acronym>SNMP</acronym> especificado em
   <parameter>objectId</parameter> usando uma consulta GET.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Se <parameter>objectId</parameter> for uma string, então <methodname>SNMP::get</methodname>
   retornará o objeto <acronym>SNMP</acronym> como string. Se
   <parameter>objectId</parameter> for um array, todos os objetos <acronym>SNMP</acronym>
   solicitados serão retornados como um array associativo dos IDs dos objetos <acronym>SNMP</acronym> e seus
   valores.
  </para>
  <para>
  <variablelist>
   <varlistentry>
    <term><parameter>objectId</parameter></term>
    <listitem>
     <para>
      O objeto <acronym>SNMP</acronym> (OID) ou objetos
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>preserveKeys</parameter></term>
    <listitem>
     <para>
      Quando <parameter>objectId</parameter> é um array e
      <parameter>preserveKeys</parameter> definido como &true; as chaves nos resultados
      serão obtidas exatamente como em <parameter>objectId</parameter>,
      caso contrário, a propriedade <varname>SNMP::oid_output_format</varname> é usada para determinar
      o formato das chaves.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna objetos <acronym>SNMP</acronym> solicitados como string ou array
   dependendo do tipo <parameter>objectId</parameter> ou &false; em caso de erro.
  </para>
 </refsect1>

 &snmp.methods.exceptions_enable.refsect;

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="snmp.get.example.singleoid">
   <title>Objeto <acronym>SNMP</acronym> único</title>
   <para>
     Um único objeto <acronym>SNMP</acronym> pode ser solicitado de duas maneiras: como
     string (valor de retorno da string resultante) ou como um array de elemento único (com
     array associativo como saída).
   </para>
   <programlisting role="php">
<![CDATA[
<?php
  $session = new SNMP(SNMP::VERSION_1, "127.0.0.1", "public");
  $sysdescr = $session->get("sysDescr.0");
  echo "$sysdescr\n";
  $sysdescr = $session->get(array("sysDescr.0"));
  print_r($sysdescr);
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
STRING: Test server
Array
(
    [SNMPv2-MIB::sysDescr.0] => STRING: Test server
)
]]>
   </screen>
  </example>
  <example xml:id="snmp.get.example.oidarray">
   <title>Vários objetos <acronym>SNMP</acronym></title>
   <programlisting role="php">
<![CDATA[
  $session = new SNMP(SNMP::VERSION_1, "127.0.0.1", "public");
  $results = $session->get(array("sysDescr.0", "sysName.0"));
  print_r($results);
  $session->close();
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
Array
(
    [SNMPv2-MIB::sysDescr.0] => STRING: Test server
    [SNMPv2-MIB::sysName.0] => STRING: myhost.nodomain
)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>SNMP::getErrno</methodname></member>
   <member><methodname>SNMP::getError</methodname></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
