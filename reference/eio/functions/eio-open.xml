<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: b38591439b2afe309740774f5fa41cafe32c72b9 Maintainer: leonardolara Status: ready -->

<refentry xml:id="function.eio-open" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>eio_open</refname>
  <refpurpose>Abre um arquivo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>eio_open</methodname>
   <methodparam><type>string</type><parameter>path</parameter></methodparam>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam><type>int</type><parameter>mode</parameter></methodparam>
   <methodparam><type>int</type><parameter>pri</parameter></methodparam>
   <methodparam><type>callable</type><parameter>callback</parameter></methodparam>
   <methodparam
   choice="opt"><type>mixed</type><parameter>data</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
  <function>eio_open</function> abre o arquivo especificado em
  <parameter>path</parameter> mo modo de acesso <parameter>mode</parameter>.
  </para>


 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>path</parameter></term>
    <listitem>
     <para>
      Caminho do arquivo a ser aberto.
      <warning><simpara>
       Em alguns SAPIs (ex.: <emphasis>PHP-FPM</emphasis>) pode falhar se
       o caminho completo não for especificado.
     </simpara></warning>
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>flags</parameter></term>
    <listitem>
    <para>Uma das constantes <emphasis>EIO_O_*</emphasis> ou suas
    combinações. Constantes <emphasis>EIO_O_*</emphasis> têm o mesmo
    significado, como suas contrapartes <emphasis>O_*</emphasis>
    definidas no arquivo de cabeçalho C <literal>fnctl.h</literal>. O padrão é
    <constant>EIO_O_RDWR</constant>.
    </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>mode</parameter></term>
    <listitem>
    <para>Uma das constantes <emphasis>EIO_S_I*</emphasis> ou suas combinações
     (com operação OR binária). As constantes têm o mesmo significado de suas
     contrapartes<emphasis>S_I*</emphasis> definidas no arquivo de cabeçalho C <link
     xlink:href="http://pubs.opengroup.org/onlinepubs/9699919799/basedefs/sys_stat.h.html">sys/stat.h</link>.
     É requerido, se um arquivo for criado. Caso contrário é ignorado.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>pri</parameter></term>
    <listitem>
    &eio.request.pri.values;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>callback</parameter></term>
    <listitem>
     &eio.callback.proto;
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>data</parameter></term>
    <listitem>
     <para>
      Variável arbitrária passada para <parameter>callback</parameter>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>eio_open</function> retorna um descritor de arquivo no argumento
   <parameter>result</parameter> de <parameter>callback</parameter>
   em caso de sucesso; caso contrário, <parameter>result</parameter> é igual a <constant>-1</constant>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de <function>eio_open</function></title>
   <programlisting role="php">
<![CDATA[
<?php
$temp_filename = "eio-temp-file.tmp";

/* Função chamada quando eio_close() termina */
function my_close_cb($data, $result) {
 // Zero indica successo
    var_dump($result == 0);
 @unlink($data);
}

/* Função chamada quando eio_open() termina */
function my_file_opened_callback($data, $result) {
 // $result deve conter o descritor de arquivo
    var_dump($result > 0);

    if ($result > 0) {
  // Fecha o arquivo
        eio_close($result, EIO_PRI_DEFAULT, "my_close_cb", $data);
        eio_event_loop();
    }
}

// Cria novo arquivo para leitura e escrita
// Nega acesso de grupo e outros no arquivo
eio_open($temp_filename, EIO_O_CREAT | EIO_O_RDWR, EIO_S_IRUSR | EIO_S_IWUSR,
  EIO_PRI_DEFAULT, "my_file_opened_callback", $temp_filename);
eio_event_loop();
?>
]]>
   </programlisting>
   &example.outputs.similar;
   <screen>
<![CDATA[
bool(true)
bool(true)
]]>
   </screen>
  </example>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>eio_mknod</function></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
