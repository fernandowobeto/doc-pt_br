<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 12ff796708d2460fed5a241950e667ea938d07e7 Maintainer: leonardolara Status: ready -->

<refentry xml:id="quickhashinthash.loadfromfile" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>QuickHashIntHash::loadFromFile</refname>
  <refpurpose>Este método de fábrica cria um hash de um arquivo</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <modifier>static</modifier> <type>QuickHashIntHash</type><methodname>QuickHashIntHash::loadFromFile</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  <para>
   Este método de fábrica cria um novo hash a partir de um arquivo de definição em disco. O formato do arquivo
   consiste em uma assinatura <literal>'QH\0x11\0'</literal>, o número de elementos como
   um inteiro com sinal de 32 bits na ordem de bytes usada pelo sistema, seguido por inteiros com sinal de 32 bits
   compactados na ordem de bytes utilizado pelo sistema no qual o código
   é executado. Para cada elemento de hash, há dois inteiros com sinal de 32 bits
   armazenados. O primeiro de cada elemento é a chave e o segundo é o valor
   pertencente à chave. Um exemplo poderia ser:
  </para>
  <para>
   <example>
    <title>Formato de arquivo QuickHash IntHash</title>
    <screen><![CDATA[00000000  51 48 11 00 02 00 00 00  01 00 00 00 01 00 00 00  |QH..............|
00000010  03 00 00 00 09 00 00 00                           |........|
00000018
]]></screen>
   </example>
  </para>
  <para>
   <example>
    <title>Formato de arquivo QuickHash IntHash</title>
    <screen><![CDATA[assinatura de cabeçalho ('QH'; tipo de chave: 1; tipo de valor: 1; preenchimento: \0x00)
00000000  51 48 11 00

número de elementos:
00000004  02 00 00 00

string de dados:
00000000  01 00 00 00 01 00 00 00  03 00 00 00 09 00 00 00

chave/valor 1 (chave = 1, valor = 1)
01 00 00 00  01 00 00 00

chave/valor 2 (chave = 3, valor = 9)
03 00 00 00  09 00 00 00
]]></screen>
   </example>
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       O nome do arquivo do qual o hash será lido.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       As mesmas opções que o construtor da classe aceita; exceto que a opção de tamanho
       é ignorada. Ela é calculada automaticamente para ser igual ao
       número de entradas no hash, arredondado para a potência de dois mais próxima
       com um limite máximo de <literal>4194304</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna um novo <classname>QuickHashIntHash</classname>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>QuickHashIntHash::loadFromFile</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$file = dirname( __FILE__ ) . "/simple.hash";
$hash = QuickHashIntHash::loadFromFile(
    $file,
    QuickHashIntHash::DO_NOT_USE_ZEND_ALLOC
);
foreach( range( 0, 0x0f ) as $key )
{
    printf( "Chave %3d (%2x) está %s\n",
        $key, $key,
        $hash->exists( $key ) ? 'definida' : 'indefinida'
    );
}
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Chave   0 ( 0) está indefinida
Chave   1 ( 1) está definida
Chave   2 ( 2) está definida
Chave   3 ( 3) está definida
Chave   4 ( 4) está indefinida
Chave   5 ( 5) está definida
Chave   6 ( 6) está indefinida
Chave   7 ( 7) está definida
Chave   8 ( 8) está indefinida
Chave   9 ( 9) está indefinida
Chave  10 ( a) está indefinida
Chave  11 ( b) está definida
Chave  12 ( c) está indefinida
Chave  13 ( d) está definida
Chave  14 ( e) está indefinida
Chave  15 ( f) está indefinida
]]>
    </screen>
   </example>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
