<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: bfa171ecb7d958d09e9fd576090c95a62caff784 Maintainer: leonardolara Status: ready -->

<refentry xml:id="quickhashstringinthash.set" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>QuickHashStringIntHash::set</refname>
  <refpurpose>Este método atualiza uma entrada no hash com um novo valor, ou
   adiciona um novo se a entrada não existir</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>int</type><methodname>QuickHashStringIntHash::set</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>int</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Este método tenta atualizar uma entrada com um novo valor. Caso a entrada
   ainda não exista, ele adicionará uma nova entrada. Ele retorna se a entrada
   foi adicionada ou atualizada. Se houver chaves duplicadas, apenas o primeiro elemento
   encontrado receberá um valor atualizado. Use
   QuickHashStringIntHash::CHECK_FOR_DUPES durante a criação do hash para evitar que chaves
   duplicadas façam parte do hash.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       A chave da entrada a ser adicionada.or update.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       O valor da entrada a ser adicionada. Se uma entrada não-string for passada, ela será
       convertida para uma string automaticamente, se possível.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   2 se a entrada foi encontrada e atualizada, 1 se a entrada foi adicionada recentemente ou 0
   se houve um erro.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>QuickHashStringIntHash::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$hash = new QuickHashStringIntHash( 1024 );

echo "Define->Adiciona\n";
var_dump( $hash->get( "quarenta e seis mil seiscentos e noventa e dois" ) );
var_dump( $hash->set( "quarenta e seis mil seiscentos e noventa e dois", 16091 ) );
var_dump( $hash->get( "quarenta e seis mil seiscentos e noventa e dois" ) );

echo "Define->Atualiza\n";
var_dump( $hash->set( "quarenta e seis mil seiscentos e noventa e dois", 29906 ) );
var_dump( $hash->get( "quarenta e seis mil seiscentos e noventa e dois" ) );
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Define->Adiciona
bool(false)
int(2)
int(16091)
Define->Atualiza
int(1)
int(29906)
]]>
    </screen>
   </example>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
