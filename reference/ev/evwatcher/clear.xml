<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 23ea6be076881a34e1d454e9680968ece085f7f6 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="evwatcher.clear" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvWatcher::clear</refname>
  <refpurpose>Limpa o status pendente do observador</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier>
   <type>int</type>
   <methodname>EvWatcher::clear</methodname>
   <void />
  </methodsynopsis>
  <para>
   Se o observador estiver pendente, este método limpa seu
   status <varname>pending</varname>
   e retorna seu bit
   <varname>revents</varname>
   definido (como se sua função de retorno tivesse sido invocada).
   Se o observador não estiver pendente,
   ele não faz nada e retorna <literal>0</literal>.
  </para>
  <para>
   Às vezes, pode ser útil "pesquisar" um observador em vez de esperar que sua
   função de retorno seja invocada, o que pode ser feito com esta função.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Caso o observador esteja pendente, retorna
   o bit <varname>revents</varname>
   definido como se a
   <link
   linkend="ev.watcher-callbacks">função de retorno do observador</link>
   tivesse sido invocada. Caso contrário,
   retorna <literal>0</literal>.
  </para>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
