<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 23ea6be076881a34e1d454e9680968ece085f7f6 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="ev.recommendedbackends" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>Ev::recommendedBackends</refname>
  <refpurpose>Retorna uma máscara de bits de backends recomendados para a
  plataforma atual</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>final</modifier>
   <modifier>public</modifier>
   <modifier>static</modifier>
   <type>int</type>
   <methodname>Ev::recommendedBackends</methodname>
   <void />
  </methodsynopsis>
  <para>
   Retorna o conjunto de todos os backend compilados neste binário de
   <literal>libev</literal>
   e também recomendados para esta plataforma, o que significa que irá funcionar para a maioria dos
   tipos de descritores de arquivo. Este conjunto é frequentemente menor que o retornado por
   <function>ev_supported_backends</function>,
   como por exemplo,
   <literal>kqueue</literal>
   fica quebrado na maioria dos sistemas
   <literal>BSD</literal>
   e não será auto-detectado a menos que seja quererido explicitamente.
   Este é o conjunto de backends que
   <literal>libev</literal> irá sondar,
   não havendo backends especificados explicitamente.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna uma máscara de bits que pode conter
   <link
  linkend="ev.constants.watcher-backends">opções de backend</link>
   combinadas usando operação
   <emphasis>OR</emphasis>
   binária.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
 <example>
   <title>Incorporando um laço em outro</title>
   <programlisting role="php">
<![CDATA[
<?php
/*
* Tenta obter um laço de evento incorporável e incorporá-lo no
* laço de evento padrão. Se for impossível, usa o laço padrão.
* O laço padrão é armazenado em $loop_hi, enquanto o laço incorporável
* é armazenado em $loop_lo (que é $loop_hi no caso de nenhum laço
* incorporável poder ser usado).
*
* Exemplo traduzido para PHP de
* http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#Examples_CONTENT-9
*/
$loop_hi = EvLoop::defaultLoop();
$loop_lo = NULL;
$embed   = NULL;

/*
* Vê se há uma chance de conseguir um que funcione
* (o valor 0 da opção significa autodetecção)
*/
$loop_lo = Ev::embeddableBackends() & Ev::recommendedBackends()
    ? new EvLoop(Ev::embeddableBackends() & Ev::recommendedBackends())
    : 0;

if ($loop_lo) {
    $embed = new EvEmbed($loop_lo, function () {});
} else {
    $loop_lo = $loop_hi;
}
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <classname>EvEmbed</classname>
   </member>
   <member>
    <methodname>Ev::embeddableBackends</methodname>
   </member>
   <member>
    <methodname>Ev::supportedBackends</methodname>
   </member>
   <member>
    <link linkend="ev.constants.watcher-backends">Opções de backend</link>
   </member>
   <member>
    <link linkend="ev.examples">Examplos</link>
   </member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
