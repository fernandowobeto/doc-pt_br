<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 33e5f4ef7243bc1282acb1cba93e8f99c1debe68 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="evembed.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>EvEmbed::__construct</refname>
  <refpurpose>Constrói o objeto EvEmbed</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis>
   <modifier>public</modifier>
   <methodname>EvEmbed::__construct</methodname>
   <methodparam>
    <type>object</type>
    <parameter>other</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>callable</type>
    <parameter>callback</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>mixed</type>
    <parameter>data</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>int</type>
    <parameter>priority</parameter>
   </methodparam>
  </constructorsynopsis>
  <para>
   Este é um tipo de observador bastante avançado que permite incorporar um laço
   de eventos em outro (atualmente, apenas eventos de E/S são suportados no laço incorporado;
   outros tipos de observadores podem ser manipulados de forma atrasada ou incorreta
   e não devem ser usados).
  </para>
  <para>
   Consulte
   <link
  xlink:href="http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#code_ev_embed_code_when_one_backend_">a
  documentção da libev</link>
   para detalhes.
  </para>
  <para>
   Este observador é mais útil em
   sistemas <emphasis>BSD</emphasis>
   sem
   <literal>kqueue</literal> funcional
   para que ainda seja possível manipular um número grande de soquetes. Veja o exemplo abaixo.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term>
     <parameter>other</parameter>
    </term>
    <listitem>
     <para>
      Instância de
      <classname>EvLoop</classname>.
      O laço a ser incorporado, este laço precisa ser incorporável
      (consulte
      <methodname>Ev::embeddableBackends</methodname>).
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>callback</parameter>
    </term>
    <listitem>
     <para>
      Consulte
      <link linkend="ev.watcher-callbacks">funções de retorno
       observadoras</link>.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>data</parameter>
    </term>
    <listitem>
     <para>
      Dados personalizados associados com o observador.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term>
     <parameter>priority</parameter>
    </term>
    <listitem>
     <para>
      <link linkend="ev.constants.watcher-pri">Prioridade de observadores</link>.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
 <example>
   <title>Incorporando laço criado com o backend kqueue no laço padrão</title>
   <programlisting role="php">
<![CDATA[
<?php
/*
* Verifica se o kqueue está disponível, mas não é recomendado, e cria um backend kqueue
* para uso com soquetes (que geralmente funcionam com qualquer implementação kqueue).
* Armazena o laço de eventos kqueue/somente-soquete em loop_soquete. (Opcionalmente,
* pode-se usar EVFLAG_NOENV também)
*
* Exemplo emprestado de
* http://pod.tst.eu/http://cvs.schmorp.de/libev/ev.pod#Examples_CONTENT-9
*/
$loop        = EvLoop::defaultLoop();
$soquete_loop = NULL;
$embed       = NULL;

if (Ev::supportedBackends() & ~Ev::recommendedBackends() & Ev::BACKEND_KQUEUE) {
    if (($soquete_loop = new EvLoop(Ev::BACKEND_KQUEUE))) {
        $embed = new EvEmbed($loop);
    }
}

if (!$soquete_loop) {
    $soquete_loop = $loop;
}

// Agora usa $soquete_loop para todos os soquetes e $loop para qualquer outra coisa
?>
]]>
   </programlisting>
  </example>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member>
    <methodname>Ev::embeddableBackends</methodname>
   </member>
  </simplelist>
 </refsect1>
</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
