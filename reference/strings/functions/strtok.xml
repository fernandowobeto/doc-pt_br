<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 45042fef652f1b4e904e809fcbfcf31f6c60670b Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.strtok" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtok</refname>
  <refpurpose>Divide uma string em tokens</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>strtok</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>token</parameter></methodparam>
  </methodsynopsis>
  <simpara>Assinatura alternativa (não suportada com argumentos nomeados):</simpara>
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>strtok</methodname>
   <methodparam><type>string</type><parameter>token</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>strtok</function> divide a <parameter>string</parameter>
   em partes menores (tokens), com cada token sendo delimitado pelo
   caractere definido em <parameter>token</parameter>.
   Isto é, em uma string como "Este é um texto de exemplo", pode-se
   dividir esta string em palavras individuais usando-se o
   caractere de espaço como o <parameter>token</parameter>.
  </para>
  <para>
   Observe que somente a primeira chamada a strtok usa o argumento <parameter>string</parameter>.
   Cada chamada subsequente a strtok precisará apenas do parâmetro <parameter>token</parameter>, já
   que ela guarda a posição atual na string. Para reiniciar,
   ou para dividir uma nova string em tokens, deve-se simplesmente chamar strtok com o
   argumento <parameter>string</parameter> novamente. Observe que pode-se incluir
   múltiplos tokens no parâmetro <parameter>token</parameter>. A string será
   dividida sempre que qualquer dos caracteres presentes no argumento <parameter>token</parameter> for
   encontrado.
  </para>
  <note>
   <para>
    Esta função comporta-se de maneira um pouco diferente do que o esperado
    quando se está familiar com <function>explode</function>.
    Primeiramente uma sequência de dois ou mais caracteres contíguos de <parameter>token</parameter>
    na string é considerado como um único delimitador.
    Além disso, um <parameter>token</parameter> situado no início ou no final da
    string é ignorado.
    Por exemplo, se uma string <literal>";aaa;;bbb;"</literal> for usada, chamadas
    sucessivas a <function>strtok</function> com <literal>";"</literal> como
    <parameter>token</parameter> retornaria as strings
    "aaa" e "bbb", e depois &false;.
    Como resultado, a string seria dividida em apenas dois elementos, enquanto que
    <literal>explode(";", $string)</literal> retornaria um array com 5 elementos.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A <type>string</type> que será dividida em strings menores (tokens).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>token</parameter></term>
     <listitem>
      <para>
       O delimitador usado ao dividir a <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Um token de <type>string</type> ou &false; se nenhum token adicional estiver disponível.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.3.0</entry>
       <entry>
        Agora emite um alerta <constant>E_WARNING</constant> quando <parameter>token</parameter> não for informado.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>strtok</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$string = "Este é\tum texto de\nexemplo";
/* Pode-se usar também tabulação e nova linha como caracteres de divisão */
$tok = strtok($string, " \n\t");

while ($tok !== false) {
    echo "Palavra={$tok}\n";
    $tok = strtok(" \n\t");
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Comportamento de <function>strtok</function> com uma parte vazia encontrada</title>
    <programlisting role="php">
<![CDATA[
<?php
$first_token  = strtok('/palavra', '/');
$second_token = strtok('/');
var_dump($first_token, $second_token);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
    string(7) "palavra"
    bool(false)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>A diferença entre <function>strtok</function> e <function>explode</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$string = ";aaa;;bbb;";

$parts = [];
$tok = strtok($string, ";");
while ($tok !== false) {
    $parts[] = $tok;
    $tok = strtok(";");
}
echo json_encode($parts),"\n";

$parts = explode(";", $string);
echo json_encode($parts),"\n";
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
["aaa","bbb"]
["","aaa","","bbb",""]
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &return.falseproblem;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>explode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
