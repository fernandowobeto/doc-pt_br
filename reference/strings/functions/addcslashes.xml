<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2bcb7a986d47e06c1a37474a8b3634367c907043 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.addcslashes" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>addcslashes</refname>
  <refpurpose>Escapa string com barras invertidas no estilo C</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>addcslashes</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>string</type><parameter>characters</parameter></methodparam>
  </methodsynopsis>
  <para>
   Retorna uma string com barras invertidas antes dos caracteres que estão
   listados no parâmetro <parameter>characters</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       A string a ser escapada.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>characters</parameter></term>
     <listitem>
      <para>
       Uma lista de caracteres a serem escapados. Se
       <parameter>characters</parameter> contiver caracteres
       <literal>\n</literal>, <literal>\r</literal> etc., eles serão
       convertidos no estilo da linguagem C, enquanto que outros caracteres não alfanuméricos
       com códigos ASCII menores que 32 e maiores que 126 serão convertidos para
       a representação octal.
      </para>
      <para>
       Ao definir uma sequência de caracteres no argumento <parameter>characters</parameter>
       certifique-se que são conhecidos todos os caracteres que aparecem entre aqueles
       definidos como o início e o final do intervalo.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
echo addcslashes('foo[ ]', 'A..z');
// saída:  \f\o\o\[ \]
// Todas as letras maiúsculas e minúsculas serão escapadas
// ... mas também os caracteres [\]^_`
?>
]]>
        </programlisting>
       </informalexample>
       Adicionamente, se o primeiro caractere em uma sequência possuir um código ASCII maior
       que o segundo caractere na sequência, na verdade nenhum intervalo será
       construído. Apenas os caracteres do início, do final e o caractere "." serão
       escapados. Use a função <function>ord</function> para encontrar o
       código ASCII de um caractere.
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
echo addcslashes("zoo['.']", 'z..A');
// output:  \zoo['\.']
?>
]]>
        </programlisting>
       </informalexample>
      </para>
      <para>
       Cuidado ao escapar os caracteres 0, a, b, f, n, r, t e
       v. Eles serão convertidos para \0, \a, \b, \f, \n, \r, \t e \v, que são
       sequências de escape predefinidas em C. Muitas dessas sequências são
       também definidas em outras linguagens derivadas do C, incluindo o PHP, o que significa que
       pode não ser obtido o resultado desejado se a saída de
       <function>addcslashes</function> for usada para gerar código nessas linguagens
       com estes caracteres definidos no parâmetro <parameter>characters</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna a string escapada.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
    Parâmetro <parameter>characters</parameter> definido para algo como "\0..\37", que
    escapa todos os caracteres com código entre 0 e 31 (octal \37).
   <example>
    <title>Exemplo de <function>addcslashes</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$escaped = addcslashes($not_escaped, "\0..\37!@\177..\377");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>stripcslashes</function></member>
    <member><function>stripslashes</function></member>
    <member><function>addslashes</function></member>
    <member><function>htmlspecialchars</function></member>
    <member><function>quotemeta</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
