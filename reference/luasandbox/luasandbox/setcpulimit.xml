<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: cdc9d28d334bbc08386fecf8aade66080004a9dd Maintainer: leonardolara Status: ready -->

<refentry xml:id="luasandbox.setcpulimit" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>LuaSandbox::setCPULimit</refname>
  <refpurpose>Define o limite de tempo da CPU para o ambiente Lua</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>void</type><methodname>LuaSandbox::setCPULimit</methodname>
   <methodparam><type class="union"><type>float</type><type>bool</type></type><parameter>limit</parameter></methodparam>
  </methodsynopsis>
  <para>
   Define o limite de tempo da CPU para o ambiente Lua.
  </para>
  <para>
   Se o tempo total do usuário e do sistema usado pelo ambiente após a chamada
   para este método exceder este limite, uma exceção <classname>LuaSandboxTimeoutError</classname>
   será lançada.
  </para>
  <para>
   O tempo gasto em funções de retorno do PHP está incluído no limite.
  </para>
  <para>
   Definir o limite de tempo a partir de uma função de retorno enquanto Lua está em execução faz com que o
   cronômetro seja reiniciado ou iniciado se ainda não estiver em execução.
  </para>
  <note>
   <para>
    No Windows, o limite da CPU será ignorado. Em sistemas operacionais que
    não suportam <constant>CLOCK_THREAD_CPUTIME_ID</constant>, como FreeBSD
    e Mac OS X, o tempo de relógio de parede em vez do tempo da CPU será limitado.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>limit</parameter></term>
    <listitem>
     <para>
      Limite como <type>float</type> em segundos, ou &false; para nenhum limite.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Chamando uma função Lua</title>
    <programlisting role="php">
<![CDATA[
<?php

// Cria um novo LuaSandbox
$sandbox = new LuaSandbox();

// Define um limite de tempo
$sandbox->setCPULimit( 2 );

// Executa código Lua
$sandbox->loadString( 'while true do end' )->call();

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
PHP Fatal error:  Uncaught LuaSandboxTimeoutError: The maximum execution time for this script was exceeded
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>LuaSandbox::getCPUUsage</methodname></member>
    <member><methodname>LuaSandbox::setMemoryLimit</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
