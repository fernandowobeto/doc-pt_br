<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 11f0c34a3deb40fa93a7458997c84d133820b815 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<book xml:id="book.seaslog" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="pecl" ?>
 <title>Seaslog</title>
 <titleabbrev>Seaslog</titleabbrev>

 <preface xml:id="intro.seaslog">
  &reftitle.intro;
  <para>
   O <acronym>Seaslog</acronym> é uma extensão de registro eficaz, rápida e estável para PHP.
  </para>
  <para>
   O registro geralmente é o registro operacional do sistema,
   do software e da aplicação.
   Através da análise do registro, os usuários podem compreender a operação do sistema,
   do software e da situação da aplicação.
   Se o registro da aplicação for rico o suficiente,
   ele também poderá analisar o comportamento operacional do usuário anterior, o tipo,
   a distribuição regional e outras informações adicionais.
   O registro da aplicação também aponta para vários níveis simultaneamente.
   Pode-se obter facilmente a análise do status de saúde da aplicação,
   encontrar problemas em tempo hábil e posicionamento rápido, e resolvê-los, remediando a perda.
  </para>
  <para>
   A função error_log, interna do PHP, é poderosa e tem excelente desempenho,
   mas devido a vários defeitos (error_log não possui nível de erro, não possui formato fixo, registro independentemente do módulo,
   e se mistura com o registro do sistema), reduz bastante a flexibilidade e não atende aos requisitos da aplicação.
  </para>
  <para>
   A boa notícia é que há uma série de bibliotecas de classes de registros de terceiros estabelecidas
   para compensar os defeitos, como log4php, plog, monolog (é claro,
   há muitas aplicações no desenvolvimento de projetos da classe de registros).
  </para>
  <para>
   Portanto, há muitas bibliotecas que atendem aos seguintes requisitos:
    <simplelist>
     <member>Módulos, classificação</member>
     <member>Configuração simples (de preferência sem configuração)</member>
     <member>Formato de registro claro e de fácil compreensão</member>
     <member>Aplicação simples com bom desempenho</member>
    </simplelist>
    <acronym>Seaslog</acronym> atende a essas demandas.
  </para>
  <para>
   O que é fornecido atualmente:
   <simplelist>
    <member>No projeto PHP, registra a especificação do registro rapidamente.</member>
    <member>Configura o diretório e o módulo de registro padrão</member>
    <member>Especifica o diretório de registro e captura a configuração atual</member>
    <member>Análise preliminar da estrutura de alerta antecipado</member>
    <member>Buffer de registro eficiente e depuração conveniente do buffer</member>
    <member>Segue a especificação da interface de registro PSR-3</member>
    <member>Registra automaticamente informações de erro</member>
    <member>Registra automaticamente informações anormais</member>
    <member>Suporte à conexão da porta TCP, envia com RFC5424</member>
    <member>Suporte à conexão da porta UDP, envia com RFC5424</member>
    <member>Suporte a solicitações diferenciadas por RequestId</member>
    <member>Suporte à personalização do modelo de registro</member>
   </simplelist>
  </para>
  <para>
   Leia mais sobre <link xlink:href="&url.seaslog.document;">SeasLog</link> no Github.
  </para>
 </preface>

 &reference.seaslog.setup;
 &reference.seaslog.constants;
 &reference.seaslog.examples;
 &reference.seaslog.reference;
 &reference.seaslog.seaslog;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
