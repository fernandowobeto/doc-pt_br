<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 7a016103e0d568448f5985dfd945092d69d5d59c Maintainer: leonardolara Status: ready -->
<refentry xml:id="function.openssl-encrypt" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>openssl_encrypt</refname>
  <refpurpose>Criptografa dados</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>openssl_encrypt</methodname>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>data</parameter></methodparam>
   <methodparam><type>string</type><parameter>cipher_algo</parameter></methodparam>
   <methodparam><modifier role="attribute">#[\SensitiveParameter]</modifier><type>string</type><parameter>passphrase</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>iv</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">tag</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>aad</parameter><initializer>""</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>tag_length</parameter><initializer>16</initializer></methodparam>
  </methodsynopsis>
  <para>
   Criptografa dados fornecidos com determinado método e senha, retorna uma
   string bruta ou codificada em base64.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Os dados da mensagem de texto simples a serem criptografados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>cipher_algo</parameter></term>
     <listitem>
      <para>
       O método de criptografia. Para obter uma lista de métodos de criptografia disponíveis, use <function>openssl_get_cipher_methods</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>passphrase</parameter></term>
     <listitem>
      <para>
       A senha. Se a senha for menor que o esperado, ela será preenchida silenciosamente com
       caracteres <literal>NUL</literal>; se a senha for maior que o esperado, ela será
       truncada silenciosamente.
      </para>
      <caution>
       <simpara>
        Não há função de derivação de chave usada para <parameter>passphrase</parameter> como o próprio
        nome pode sugerir. A única operação utilizada é o preenchimento com caracteres <literal>NUL</literal>
        ou truncamento se o comprimento for diferente do esperado.
       </simpara>
      </caution>
     </listitem>
    </varlistentry>
    <varlistentry>
      <term><parameter>options</parameter></term>
      <listitem>
        <para>
          <parameter>options</parameter> é uma disjunção binária das opções
          <constant>OPENSSL_RAW_DATA</constant> e
          <constant>OPENSSL_ZERO_PADDING</constant>
          ou <constant>OPENSSL_DONT_ZERO_PAD_KEY</constant>.
        </para>
      </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>iv</parameter></term>
     <listitem>
      <para>
       Um Vetor de Inicialização não-&null;. Se for menor que o esperado, será preenchido com
       caracteres <literal>NUL</literal> e um alerta será emitido; se for maior que o
       o esperado, será truncado e um alerta será emitido.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>tag</parameter></term>
     <listitem>
      <para>
       A etiqueta de autenticação passada por referência ao usar o modo de criptografia AEAD (GCM ou CCM).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>aad</parameter></term>
     <listitem>
      <para>
       Dados autenticados adicionais.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>tag_length</parameter></term>
     <listitem>
      <para>
       O comprimento da etiqueta de autenticação (parâmetro <parameter>tag</parameter>). Seu valor pode estar entre 4 e 16 para o modo GCM.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna a string criptografada em caso de sucesso&return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Emite um erro de nível <constant>E_WARNING</constant> se um algoritmo de criptografia
   desconhecido for passado através do parâmetro <parameter>cipher_algo</parameter>.
  </para>
  <para>
   Emite um erro de nível <constant>E_WARNING</constant> se um valor vazio
   for passado através do parâmetro <parameter>iv</parameter>.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>7.1.0</entry>
      <entry>Os parâmetros <parameter>tag</parameter>, <parameter>aad</parameter> e <parameter>tag_length</parameter> foram adicionados.</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de criptografia autenticada AES no modo GCM para PHP 7.1+</title>
    <programlisting role="php">
<![CDATA[
<?php
// $key deve ter sido gerada previamente de forma criptograficamente segura, como openssl_random_pseudo_bytes
$plaintext = "mensagem a ser criptografada";
$cipher = "aes-128-gcm";
if (in_array($cipher, openssl_get_cipher_methods()))
{
    $ivlen = openssl_cipher_iv_length($cipher);
    $iv = openssl_random_pseudo_bytes($ivlen);
    $ciphertext = openssl_encrypt($plaintext, $cipher, $key, $options=0, $iv, $tag);
    // armazena $cipher, $iv e $tag para descriptografia posterior
    $original_plaintext = openssl_decrypt($ciphertext, $cipher, $key, $options=0, $iv, $tag);
    echo $original_plaintext."\n";
}
?>
]]>
    </programlisting>
   </example>

   <example>
    <title>Exemplo de criptografia autenticada AES antes do PHP 7.1</title>
    <programlisting role="php">
<![CDATA[
<?php
// $key gerada anteriormente com segurança, ou seja: openssl_random_pseudo_bytes
$plaintext = "mensagem a ser criptografada";
$ivlen = openssl_cipher_iv_length($cipher="AES-128-CBC");
$iv = openssl_random_pseudo_bytes($ivlen);
$ciphertext_raw = openssl_encrypt($plaintext, $cipher, $key, $options=OPENSSL_RAW_DATA, $iv);
$hmac = hash_hmac('sha256', $ciphertext_raw, $key, $as_binary=true);
$ciphertext = base64_encode( $iv.$hmac.$ciphertext_raw );

// descriptografa mais tarde....
$c = base64_decode($ciphertext);
$ivlen = openssl_cipher_iv_length($cipher="AES-128-CBC");
$iv = substr($c, 0, $ivlen);
$hmac = substr($c, $ivlen, $sha2len=32);
$ciphertext_raw = substr($c, $ivlen+$sha2len);
$original_plaintext = openssl_decrypt($ciphertext_raw, $cipher, $key, $options=OPENSSL_RAW_DATA, $iv);
$calcmac = hash_hmac('sha256', $ciphertext_raw, $key, $as_binary=true);
if (hash_equals($hmac, $calcmac))// comparação segura contra ataque de temporização
{
    echo $original_plaintext."\n";
}
?>
]]>
    </programlisting>
   </example>

  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>openssl_decrypt</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
