<?xml version="1.0" encoding="utf-8"?><!-- EN-Revision: 01d19a544891db839e36de8316e78f81de56c1ca Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->
<refentry xml:id="function.curl-share-init-persistent" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>curl_share_init_persistent</refname>
  <refpurpose>Inicializa um identificador compartilhado cURL <emphasis role="bold">persistente</emphasis></refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>CurlSharePersistentHandle</type><methodname>curl_share_init_persistent</methodname>
   <methodparam><type>array</type><parameter>share_options</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Inicializa um identificador compartilhado cURL <emphasis role="bold">persistente</emphasis>
   com as opções de compartilhamento informadas. Diferente de <function>curl_share_init</function>,
   os identificadores criados por esta função não serão destruídos ao final da
   requisição PHP. Se um identificador compartilhado persistente com o mesmo conjunto de
   <parameter>share_options</parameter> for encontrado, ele será reutilizado.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;

  <variablelist>
   <varlistentry>
    <term><parameter>share_options</parameter></term>
    <listitem>
     <simpara>
      Um array não vazio de constantes <constant>CURL_LOCK_DATA_<replaceable>*</replaceable></constant>.
     </simpara>
     <note>
      <simpara>
       <constant>CURL_LOCK_DATA_COOKIE</constant>
       não é permitida e, se utilizada, esta função lançará uma exceção
       <exceptionname>ValueError</exceptionname>. Compartilhar cookies entre requisições
       PHP pode levar a uma mistura inadvertida de cookies sensíveis entre usuários.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   Retorna um objeto <classname>CurlSharePersistentHandle</classname>.
  </simpara>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <itemizedlist>
   <listitem>
    <simpara>
     Se <parameter>share_options</parameter> estiver vazio, esta função lança uma
     exceção <exceptionname>ValueError</exceptionname>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Se <parameter>share_options</parameter> contiver um valor que não corresponde
     a uma constante <constant>CURL_LOCK_DATA_<replaceable>*</replaceable></constant>,
     esta função lança uma exceção <classname>ValueError</classname>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Se <parameter>share_options</parameter> contiver
     <constant>CURL_LOCK_DATA_COOKIE</constant>, esta função lança uma exceção
     <exceptionname>ValueError</exceptionname>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Se <parameter>share_options</parameter> contiver um valor não inteiro,
     esta função lança uma exceção <exceptionname>TypeError</exceptionname>.
    </simpara>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example xml:id="function.curl-share-init-persistent.example.basic">
   <title>Exemplo de <function>curl_share_init_persistent</function></title>
   <simpara>
    Este exemplo criará um identificador de compartilhamento cURL persistente e demonstrará
    conexões compartilhadas entre si. Se isso for executado em um PHP SAPI
    de longa duração, <literal>$sh</literal> sobreviverá entre as requisições SAPI.
   </simpara>

   <programlisting role="php">
    <![CDATA[
<?php
// Cria ou recupera um identificador de compartilhamento cURL persistente definido para compartilhar pesquisas e conexões de DNS.
$sh = curl_share_init([CURL_LOCK_DATA_DNS, CURL_LOCK_DATA_CONNECT]);

// Inicializa o primeiro identificador cURL e atribui a ele o identificador de compartilhamento.
$ch1 = curl_init("http://example.com/");
curl_setopt($ch1, CURLOPT_SHARE, $sh);

// Executa o primeiro identificador cURL. Isto pode reutilizar a conexão de uma solicitação SAPI anterior.
curl_exec($ch1);

// Inicializa o segundo identificador cURL e atribui o identificador de compartilhamento a ele.
$ch2 = curl_init("http://example.com/");
curl_setopt($ch2, CURLOPT_SHARE, $sh);

// Executa o segundo identificador cURL. Isso reutilizará a conexão de $ch1.
curl_exec($ch2);

// Fecha os identificadores cURL
curl_close($ch1);
curl_close($ch2);
?>

    ]]>
   </programlisting>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>curl_setopt</function></member>
   <member><function>curl_share_init</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
