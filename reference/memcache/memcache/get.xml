<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: e41806c30bf6975e452c0d4ce35ab0984c2fa68c Maintainer: leonardolara Status: ready -->
<refentry xml:id="memcache.get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::get</refname>
  <refpurpose>Recupera item do servidor</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>Memcache::get</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">flags</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>array</type><methodname>Memcache::get</methodname>
   <methodparam><type>array</type><parameter>keys</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">flags</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::get</function> retorna dados armazenados anteriormente de
   um item, se a chave informada em <parameter>key</parameter> existir no servidor no
   momento.
  </para>

  <para>
   Pode ser passado um array de chaves para <function>Memcache::get</function> para obter
   array de valores. O array resultante conterá apenas pares de chave-valor encontrados.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       A chave ou conjunto de chaves a serem buscadas.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Se presente, os sinalizadores buscados junto com os valores serão gravados neste parâmetro. Esses
       sinalizadores são os mesmos que os fornecidos para, por exemplo, <function>Memcache::set</function>.
       O byte menos significativo do inteiro é reservado para uso interno pecl/memcache (por exemplo, para indicar
       o status de compressão e serialização).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o valor associado à chave informada em <parameter>key</parameter> ou
   um array de pares de chave-valor encontrados quando <parameter>key</parameter> é um <type>array</type>.
   Retorna &false; em caso de falha, <parameter>key</parameter> não é encontrado ou
   <parameter>key</parameter> é um <type>array</type> vazio.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>Memcache::get</function></title>
    <programlisting role="php">
<![CDATA[
<?php

/* API procedural */
$memcache_obj = memcache_connect('memcache_host', 11211);
$var = memcache_get($memcache_obj, 'some_key');

/* API orientada a objeto */
$memcache_obj = new Memcache;
$memcache_obj->connect('memcache_host', 11211);
$var = $memcache_obj->get('some_key');

/*
Também pode ser usado um array de chaves como parâmetro.
Se tal item não foi encontrado no servidor, o array de resultados
simplesmente não incluirá tal chave.
*/

/* API procedural */
$memcache_obj = memcache_connect('memcache_host', 11211);
$var = memcache_get($memcache_obj, Array('some_key', 'another_key'));

/* API orientada a objeto */
$memcache_obj = new Memcache;
$memcache_obj->connect('memcache_host', 11211);
$var = $memcache_obj->get(Array('some_key', 'second_key'));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
