<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1c3a0a021e0d97acce54fda55f6e941557056afe Maintainer: leonardolara Status: ready -->
<refentry xml:id="memcache.set" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::set</refname>
  <refname>memcache_set</refname>
  <refpurpose>Armazena dados no servidor</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>Memcache::set</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flag</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>memcache_set</methodname>
   <methodparam><type>Memcache</type><parameter>memcache</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flag</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::set</function> armazena um item
   <parameter>var</parameter> com a chave <parameter>key</parameter> no
   servidor memcached. O parâmetro <parameter>expire</parameter> é o tempo de expiração
   em segundos. Se for 0, o item nunca expira (mas o servidor memcached
   não garante que este item seja armazenado o tempo todo, ele pode ser excluído
   do cache para dar lugar a outros itens).
   A constante <constant>MEMCACHE_COMPRESSED</constant> pode ser usada como
   valor <parameter>flag</parameter> se a intenção for usar a compactação em tempo real
   (usa zlib).
   <note>
    <para>
     Lembre-se de que variáveis ​​de recursos (por exemplo, descritores de arquivo e conexão)
     não podem ser armazenadas no cache, porque não podem ser adequadamente
     representadas no estado serializado.
    </para>
   </note>
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       A chave que será associada ao item.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       A variável a ser armazenada. Strings e inteiros são armazenados diretamente, outros
       tipos são armazenados serializados.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flag</parameter></term>
     <listitem>
      <para>
       Use <constant>MEMCACHE_COMPRESSED</constant> para armazenar o item
       compactado (usa zlib).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>expire</parameter></term>
     <listitem>
      <para>
       Tempo de expiração do item. Se for igual a zero, o item nunca
       irá expirar. Você também pode usar o timestamp Unix ou um número de segundos iniciando
       do horário atual, mas no último caso o número de segundos não pode
       exceder 2592000 (30 dias).
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>Memcache::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* API procedural */

/* Conecta ao servidor memcached */
$memcache_obj = memcache_connect('memcache_host', 11211);

/*
Define o valor do item com chave 'chave_var'
usando 0 como o valor do parâmetro 'flag', compressão não é usada,
tempo de expiração é de 30 segundos
*/
memcache_set($memcache_obj, 'chave_var', 'variável qualquer', 0, 30);

echo memcache_get($memcache_obj, 'chave_var');

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Exemplo de <function>Memcache::set</function></title>
    <programlisting role="php">
<![CDATA[
<?php
/* API orientada a objeto */

$memcache_obj = new Memcache;

/* Conecta ao servidor memcached */
$memcache_obj->connect('memcache_host', 11211);

/*
Define o valor do item com chave 'chave_var', usand compressão em tempo real,
tempo de expiração é de 50 segundos
*/
$memcache_obj->set('chave_var', 'alguma variável realmente grande', MEMCACHE_COMPRESSED, 50);

echo $memcache_obj->get('chave_var');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::add</function></member>
    <member><function>Memcache::replace</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
