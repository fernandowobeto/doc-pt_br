<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 1c3a0a021e0d97acce54fda55f6e941557056afe Maintainer: leonardolara Status: ready -->
<refentry xml:id="memcache.increment" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>Memcache::increment</refname>
  <refname>memcache_increment</refname>
  <refpurpose>Incrementa o valor do item</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>Memcache::increment</methodname>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>value</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type class="union"><type>int</type><type>false</type></type><methodname>memcache_increment</methodname>
   <methodparam><type>Memcache</type><parameter>memcache</parameter></methodparam>
   <methodparam><type>string</type><parameter>key</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>value</parameter><initializer>1</initializer></methodparam>
  </methodsynopsis>

  <para>
   <function>Memcache::increment</function> incrementa o valor de um item pelo
   valor especificado em <parameter>value</parameter>. Se o item especificado por
   <parameter>key</parameter> não for numérico e não puder ser convertido em um
   número, ele mudará seu valor para <parameter>value</parameter>.
   <function>Memcache::increment</function> <emphasis>não</emphasis>
   cria um item se ele ainda não existir.
   <note>
    <para>
     Não use <function>Memcache::increment</function> com itens que foram
     armazenados compactados porque chamadas subsequentes para
     <function>Memcache::get</function> falharão.
    </para>
   </note>
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>key</parameter></term>
     <listitem>
      <para>
       Chave do item a ser incrementado.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       <parameter>value</parameter> representa o valor com o qual o item será incrementado.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Retorna o novo valor do item em caso de sucesso &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Exemplo de <function>Memcache::increment</function></title>
    <programlisting role="php">
<![CDATA[
<?php

/* API procedural */
$memcache_obj = memcache_connect('memcache_host', 11211);
/* incrementa contador em 2 */
$current_value = memcache_increment($memcache_obj, 'contador', 2);

/* API orientada a objeto */
$memcache_obj = new Memcache;
$memcache_obj->connect('memcache_host', 11211);
/* incrementa contador em 3 */
$current_value = $memcache_obj->increment('contador', 3);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>Memcache::decrement</function></member>
    <member><function>Memcache::replace</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
