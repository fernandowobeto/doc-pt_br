<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 187032b3ea20fa28f1c9f29ba38d06820428f849 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<refentry xml:id="mongodb-driver-bulkwritecommand.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>MongoDB\Driver\BulkWriteCommand::__construct</refname>
  <refpurpose>Cria um novo BulkWriteCommand</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>MongoDB\Driver\BulkWriteCommand::__construct</methodname>
   <methodparam choice="opt"><type class="union"><type>array</type><type>null</type></type><parameter>options</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Cria um novo <classname>MongoDB\Driver\BulkWriteCommand</classname>,
   que pode ser usado para executar diversas operações de inserção, atualização e exclusão em
   várias coleções em uma única solicitação usando o comando
   <link xlink:href="&url.mongodb.docs.command;bulkWrite">bulkWrite</link>
   introduzido no MongoDB 8.0. Isso difere de
   <classname>MongoDB\Driver\BulkWrite</classname>, que é suportado por todas
   as versões do servidor, mas limitado a uma única coleção.
  </para>
  <para>
   Após todas as operações de gravação terem sido adicionadas, este objeto pode ser executado com
   <methodname>MongoDB\Driver\Manager::executeBulkWriteCommand</methodname>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>options</parameter> (<type>array</type>)</term>
    <listitem>
     <para>
      <table>
       <title>Opções</title>
       <tgroup cols="4">
        <thead>
         <row>
          <entry>Opção</entry>
          <entry>Tipo</entry>
          <entry>Descrição</entry>
          <entry>Padrão</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>bypassDocumentValidation</entry>
          <entry><type>bool</type></entry>
          <entry>
           <para>
            Se &true;, permite que operações de inserção e atualização contornem
            a validação em nível de documento.
           </para>
          </entry>
          <entry>&false;</entry>
         </row>
         <row>
          <entry>comment</entry>
          <entry><type>mixed</type></entry>
          <entry>
           <para>
            Um comentário arbitrário para ajudar a rastrear a operação por meio do
            profiler do banco de dados, da saída currentOp e dos registros.
           </para>
          </entry>
         </row>
         &mongodb.option.let;
         <row>
          <entry>ordered</entry>
          <entry><type>bool</type></entry>
          <entry>
           <para>
            Se as operações nesta gravação em massa devem ser executadas
            na ordem em que foram especificadas. Se &false;, as gravações
            continuarão a ser executadas se uma gravação individual falhar. Se &true;,
            as gravações deixarão de ser executadas se uma gravação individual falhar.
           </para>
          </entry>
          <entry>&true;</entry>
         </row>
         <row>
          <entry>verboseResults</entry>
          <entry><type>bool</type></entry>
          <entry>
           <para>
            Se os resultados detalhados de cada operação bem-sucedida devem ser
            incluídos no
            <classname>MongoDB\Driver\BulkWriteCommandResult</classname> retornado.
           </para>
          </entry>
          <entry>&false;</entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <simplelist>
   &mongodb.throws.argumentparsing;
  </simplelist>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title>Exemplo de <function>MongoDB\Driver\BulkWriteCommand::__construct</function></title>
   <programlisting role="php">
<![CDATA[
<?php

$manager = new MongoDB\Driver\Manager;

$bulk = new MongoDB\Driver\BulkWriteCommand;

// Exclui documentos de ambas as coleções
$bulk->deleteMany('db.coll_one', []);
$bulk->deleteMany('db.coll_two', []);

// Insere documentos em duas coleções
$bulk->insertOne('db.coll_one', ['_id' => 1]);
$bulk->insertOne('db.coll_two', ['_id' => 2]);
$bulk->insertOne('db.coll_two', ['_id' => 3]);

// Atualiza um documento em "coll_one"
$bulk->updateOne('db.coll_one', ['_id' => 1], ['$set' => ['x' => 1]]);

$result = $manager->executeBulkWriteCommand($bulk);

printf("Inserido(s) %d documento(s)\n", $result->getInsertedCount());
printf("Atualizado(s) %d documento(s)\n", $result->getModifiedCount());

?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Inserido(s) 3 documento(s)
Atualizado(s) 1 documento(s)
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><methodname>MongoDB\Driver\Manager::executeBulkWriteCommand</methodname></member>
   <member><classname>MongoDB\Driver\BulkWriteCommandResult</classname></member>
  </simplelist>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
