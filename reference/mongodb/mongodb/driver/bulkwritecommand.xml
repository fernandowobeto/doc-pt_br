<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 187032b3ea20fa28f1c9f29ba38d06820428f849 Maintainer: leonardolara Status: ready --><!-- CREDITS: leonardolara -->

<reference xml:id="class.mongodb-driver-bulkwritecommand" role="class" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude">

 <title>A classe MongoDB\Driver\BulkWriteCommand</title>
 <titleabbrev>MongoDB\Driver\BulkWriteCommand</titleabbrev>

 <partintro>

<!-- {{{ MongoDB\Driver\BulkWriteCommand intro -->
  <section xml:id="mongodb-driver-bulkwritecommand.intro">
   &reftitle.intro;
   <para>
    <classname>MongoDB\Driver\BulkWriteCommand</classname> coleta uma ou mais
    operações de gravação que devem ser enviadas ao servidor usando o comando
    <link xlink:href="&url.mongodb.docs.command;bulkWrite">bulkWrite</link>
    introduzido no MongoDB 8.0. Após adicionar qualquer número de operações de inserção,
    atualização e exclusão, o comando pode ser executado via
    <methodname>MongoDB\Driver\Manager::executeBulkWriteCommand</methodname>.
   </para>
   <para>
    Ao contrário de <classname>MongoDB\Driver\BulkWrite</classname>, onde todas as operações de gravação
    devem ter como alvo a mesma coleção, cada operação de gravação dentro de
    <classname>MongoDB\Driver\BulkWriteCommand</classname> pode ter como alvo uma
    coleção diferente.
   </para>
   <para>
    As operações de gravação podem ser ordenadas (padrão) ou não ordenadas. As operações de gravação ordenadas
    são enviadas ao servidor, na ordem fornecida, para execução
    em série. Se uma gravação falhar, as operações restantes serão abortadas.
    As operações não ordenadas são enviadas ao servidor em uma ordem arbitrária
    onde podem ser executadas em paralelo. Quaisquer erros que ocorram são reportados
    após todas as operações terem sido tentadas.
   </para>
  </section>
<!-- }}} -->

  <section xml:id="mongodb-driver-bulkwritecommand.synopsis">
   &reftitle.classsynopsis;

<!-- {{{ Synopsis -->
   <classsynopsis>
    <ooclass><classname>MongoDB\Driver\BulkWriteCommand</classname></ooclass>

<!-- {{{ Class synopsis -->
    <classsynopsisinfo>
     <modifier>final</modifier>
     <ooclass>
      <classname>MongoDB\Driver\BulkWriteCommand</classname>
     </ooclass>

     <oointerface>
      <interfacename>Countable</interfacename>
     </oointerface>
    </classsynopsisinfo>
<!-- }}} -->

    <classsynopsisinfo role="comment">&Methods;</classsynopsisinfo>
    <xi:include xpointer="xmlns(db=http://docbook.org/ns/docbook) xpointer(id('class.mongodb-driver-bulkwritecommand')/db:refentry/db:refsect1[@role='description']/descendant::db:methodsynopsis[not(@role='procedural')])" />
   </classsynopsis>
<!-- }}} -->

  </section>

  <section xml:id="mongodb-driver-bulkwritecommand.examples">
   &reftitle.examples;

   <example>
    <title>Operações de gravação mistas</title>
    <para>
     Operações de gravação mistas (ou seja, inserções, atualizações e exclusões) serão enviadas
     para o servidor usando um único
     comando
     <link xlink:href="&url.mongodb.docs.command;bulkWrite">bulkWrite</link>.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$manager = new MongoDB\Driver\Manager;

$bulk = new MongoDB\Driver\BulkWriteCommand;

// Exclui documentos de ambas as coleções
$bulk->deleteMany('db.coll_one', []);
$bulk->deleteMany('db.coll_two', []);

// Insere documentos em duas coleções
$bulk->insertOne('db.coll_one', ['_id' => 1]);
$bulk->insertOne('db.coll_two', ['_id' => 2]);
$bulk->insertOne('db.coll_two', ['_id' => 3]);

// Atualiza um documento em "coll_one"
$bulk->updateOne('db.coll_one', ['_id' => 1], ['$set' => ['x' => 1]]);

$result = $manager->executeBulkWriteCommand($bulk);

printf("Inserido(s) %d documento(s)\n", $result->getInsertedCount());
printf("Atualizado(s) %d documento(s)\n", $result->getModifiedCount());

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Inserido(s) 3 documento(s)
Atualizado(s) 1 documento(s)
]]>
    </screen>
   </example>
   <example>
    <title>Operações de gravação ordenadas causando um erro</title>
    <programlisting role="php">
<![CDATA[
<?php

$manager = new MongoDB\Driver\Manager;

$bulk = new MongoDB\Driver\BulkWriteCommand;

$bulk->deleteMany('db.coll', []);
$bulk->insertOne('db.coll', ['_id' => 1]);
$bulk->insertOne('db.coll', ['_id' => 2]);
$bulk->insertOne('db.coll', ['_id' => 1]);
$bulk->insertOne('db.coll', ['_id' => 3]);

try {
    $result = $manager->executeBulkWriteCommand($bulk);
} catch (MongoDB\Driver\Exception\BulkWriteCommandException $e) {
    $result = $e->getPartialResult();

    var_dump($e->getWriteErrors());
}

printf("Inserido(s) %d documento(s)\n", $result->getInsertedCount());

?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
array(1) {
  [3]=>
  object(MongoDB\Driver\WriteError)#5 (4) {
    ["message"]=>
    string(78) "E11000 duplicate key error collection: db.coll index: _id_ dup key: { _id: 1 }"
    ["code"]=>
    int(11000)
    ["index"]=>
    int(3)
    ["info"]=>
    object(stdClass)#6 (0) {
    }
  }
}
Inserido(s) 2 documento(s)
]]>
    </screen>
   </example>
  </section>

  <section xml:id="mongodb-driver-bulkwritecommand.seealso">
   &reftitle.seealso;
   <simplelist>
    <member><methodname>MongoDB\Driver\Manager::executeBulkWriteCommand</methodname></member>
    <member><classname>MongoDB\Driver\BulkWriteCommandResult</classname></member>
    <member><classname>MongoDB\Driver\Exception\BulkWriteCommandException</classname></member>
    <member><classname>MongoDB\Driver\WriteConcern</classname></member>
    <member><classname>MongoDB\Driver\WriteConcernError</classname></member>
    <member><classname>MongoDB\Driver\WriteError</classname></member>
   </simplelist>
  </section>

 </partintro>

 &reference.mongodb.mongodb.driver.entities.bulkwritecommand;

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
