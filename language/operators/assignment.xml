<?xml version="1.0" encoding="utf-8"?><!-- EN-Revision: 16934048f79c6e117cd16a23c09c1b2ea502e284 Maintainer: leonardolara Status: ready --><!-- CREDITS: ae, leonardolara -->
<sect1 xml:id="language.operators.assignment">
 <title>Operadores de Atribuição</title>
 <titleabbrev>Atribuição</titleabbrev>
 <simpara>
  O operador básico de atribuição é "=". A primeira inclinação seria
  pensar nisto como "é igual". Não é verdade. Isto quer dizer que o
  operando da esquerda recebe o valor da expressão da direita (ou seja,
  "é definido para").
 </simpara>
 <para>
  O valor de uma expressão de atribuição é o valor atribuído. Ou seja,
  o valor de "<literal>$a = 3</literal>" é 3. Isto permite alguns
  truques:
  <example>
   <title>Atribuições aninhadas</title>
   <programlisting role="php">
<![CDATA[
<?php
$a = ($b = 4) + 5; // $a é igual a 9 agora e $b foi definido como 4.
var_dump($a);
?>
]]>
   </programlisting>
  </example>
 </para>
 <para>
  Além do operador básico de atribuição, há "operadores
  combinados" para todos os <link linkend="language.operators">operadores
  aritméticos</link>, de array e string que permitem a você pegar um valor de uma
  expressão e então usar seu próprio valor para o resultado daquela expressão. Por
  exemplo:
  <example>
   <title>Atribuições combinadas</title>
   <programlisting role="php">
<![CDATA[
<?php
$a = 3;
$a += 5; // define $a para 8, como se disséssemos: $a = $a + 5;
$b = "Bom ";
$b .= "Dia!"; // define $b para "Bom Dia!", como em $b = $b . "Dia!";

var_dump($a, $b);
?>
]]>
   </programlisting>
  </example>
 </para>
 <para>
  Note que a atribuição copia a variável original para a nova
  (atribuição por valor), assim a mudança de uma não afeta a
  outra. Isto pode ser relevante se você precisa copiar algo
  como um grande array dentro de um loop apertado.
 </para>
 <para>
  Uma exceção ao comportamento geral de atribuição ocorre
  com <type>object</type>s, que são atribuídos por referência.
  Objetos podem ser explicitamente copiados através da instrução <link
  linkend="language.oop5.cloning">clone</link>.
 </para>

 <sect2 xml:id="language.operators.assignment.reference">
  <title>Atribuição por referência</title>
  <para>
   Atribuição por referência também é possível, utilizando-se a sintaxe
   "<computeroutput>$var = &amp;$othervar;</computeroutput>".
   A atribuição por referência significa que ambas as variáveis apontam
   para o mesmo dado, e nada é copiado.
  </para>
  <para>
   <example>
    <title>Atribuição por referência</title>
    <programlisting role="php">
<![CDATA[
<?php
$a = 3;
$b = &$a; // $b é uma referência de $a

print "$a\n"; // imprime 3
print "$b\n"; // imprime 3

$a = 4; // modificamos $a

print "$a\n"; // imprime 4
print "$b\n"; // imprime 4 também, pois $b é uma referência de $a, que foi
              // modificada
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   O operador <link linkend="language.oop5.basic.new">new</link>
   retorna uma referência automaticamente, de forma que a atribuição de um resultado de
   <link linkend="language.oop5.basic.new">new</link> por referência é um erro.
  </para>
  <para>
   <example>
    <title>Operador new por referência</title>
    <programlisting role="php">
<![CDATA[
<?php
class C {}

$o = &new C;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Parse error: syntax error, unexpected token ";", expecting "("
]]>
    </screen>
   </example>
  </para>
  <para>
   Mais informações sobre referências e seus potenciais usos podem ser encontrados
   na seção <link linkend="language.references">Explicando Referências</link>
   do manual.
  </para>
 </sect2>

 <sect2 xml:id="language.operators.assignment.arithmetic">
  <title>Arithmetic Assignment Operators</title>
  <informaltable>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Exemplo</entry>
      <entry>Equivalente</entry>
      <entry>Operação</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>$a += $b</entry>
      <entry>$a = $a + $b</entry>
      <entry>Adição</entry>
     </row>
     <row>
      <entry>$a -= $b</entry>
      <entry>$a = $a - $b</entry>
      <entry>Subtração</entry>
     </row>
     <row>
      <entry>$a *= $b</entry>
      <entry>$a = $a * $b</entry>
      <entry>Multiplicação</entry>
     </row>
     <row>
      <entry>$a /= $b</entry>
      <entry>$a = $a / $b</entry>
      <entry>Divisão</entry>
     </row>
     <row>
      <entry>$a %= $b</entry>
      <entry>$a = $a % $b</entry>
      <entry>Módulo</entry>
     </row>
     <row>
      <entry>$a **= $b</entry>
      <entry>$a = $a ** $b</entry>
      <entry>Exponentiation</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </sect2>

 <sect2 xml:id="language.operators.assignment.bitwise">
  <title>Operadores de bits</title>
  <informaltable>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Exemplo</entry>
      <entry>Equivalente</entry>
      <entry>Operação</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>$a &amp;= $b</entry>
      <entry>$a = $a &amp; $b</entry>
      <entry>Bitwise E</entry>
     </row>
     <row>
      <entry>$a |= $b</entry>
      <entry>$a = $a | $b</entry>
      <entry>Bitwise Ou</entry>
     </row>
     <row>
      <entry>$a ^= $b</entry>
      <entry>$a = $a ^ $b</entry>
      <entry>Bitwise Xor</entry>
     </row>
     <row>
      <entry>$a &lt;&lt;= $b</entry>
      <entry>$a = $a &lt;&lt; $b</entry>
      <entry>Desloca para esquerda</entry>
     </row>
     <row>
      <entry>$a &gt;&gt;= $b</entry>
      <entry>$a = $a &gt;&gt; $b</entry>
      <entry>Desloca para direita</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </sect2>

 <sect2 xml:id="language.operators.assignment.other">
  <title>Outras operações de assimilação</title>
  <informaltable>
   <tgroup cols="3">
    <thead>
     <row>
      <entry>Exemplo</entry>
      <entry>Equivalente</entry>
      <entry>Operação</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>$a .= $b</entry>
      <entry>$a = $a . $b</entry>
      <entry>Concatenação de strings</entry>
     </row>
     <row>
      <entry>$a ??= $b</entry>
      <entry>$a = $a ?? $b</entry>
      <entry>Aglutinação de nulls (null coalesce)</entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </sect2>

 <sect2 role="seealso" xml:id="language.operators.assignment.see-also">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="language.operators.arithmetic">operadores aritméticos</link></member>
    <member><link linkend="language.operators.bitwise">operadores em bits</link></member>
    <member><link linkend="language.operators.comparison.coalesce">operador de aglutinação de null</link></member>
   </simplelist>
  </para>
 </sect2>
</sect1>
